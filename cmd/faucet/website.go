// Code generated by go-bindata.
// sources:
// faucet.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faucetHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\xff\x73\xdb\xb6\x92\xff\xd9\xf9\x2b\xb6\xbc\xf8\x49\x3a\x9b\xa4\x6c\x27\x79\x3e\x49\x54\x27\x2f\xaf\xaf\x2f\x37\x77\x6d\xa7\x4d\xe7\xee\x4d\x5f\xe7\x06\x24\x57\x22\x62\x10\x60\x01\x50\xb2\xea\xd1\xff\x7e\xb3\x00\x49\x51\x5f\xec\x26\x4d\xee\xa6\xf9\xc1\x21\x81\xc5\xee\x62\xf7\xb3\xd8\xc5\x52\xb3\x2f\xfe\xfa\xed\x9b\x77\xff\xf8\xee\x2b\x28\x6c\x29\xe6\xcf\x66\xf4\x1f\x08\x26\x97\x49\x80\x32\x98\x3f\x3b\x9b\x15\xc8\xf2\xf9\xb3\xb3\xb3\x59\x89\x96\x41\x56\x30\x6d\xd0\x26\x41\x6d\x17\xe1\x6d\xb0\x9b\x28\xac\xad\x42\xfc\xa5\xe6\xab\x24\xf8\xef\xf0\xc7\xd7\xe1\x1b\x55\x56\xcc\xf2\x54\x60\x00\x99\x92\x16\xa5\x4d\x82\xb7\x5f\x25\x98\x2f\xb1\xb7\x4e\xb2\x12\x93\x60\xc5\x71\x5d\x29\x6d\x7b\xa4\x6b\x9e\xdb\x22\xc9\x71\xc5\x33\x0c\xdd\xcb\x25\x70\xc9\x2d\x67\x22\x34\x19\x13\x98\x5c\x05\xf3\x67\xc4\xc7\x72\x2b\x70\xfe\xf0\x10\x7d\x83\x76\xad\xf4\xdd\x76\x3b\x81\xd7\xb5\x2d\x50\x5a\x9e\x31\x8b\x39\xfc\x8d\xd5\x19\xda\x59\xec\x29\xdd\x22\xc1\xe5\x1d\x14\x1a\x17\x49\x40\xaa\x9b\x49\x1c\x67\xb9\x7c\x6f\xa2\x4c\xa8\x3a\x5f\x08\xa6\x31\xca\x54\x19\xb3\xf7\xec\x3e\x16\x3c\x35\xb1\x5d\x73\x6b\x51\x87\xa9\x52\xd6\x58\xcd\xaa\xf8\x26\xba\x89\xfe\x1c\x67\xc6\xc4\xdd\x58\x54\x72\x19\x65\xc6\x04\xa0\x51\x24\x81\xb1\x1b\x81\xa6\x40\xb4\x01\xc4\xf3\xdf\x27\x77\xa1\xa4\x0d\xd9\x1a\x8d\x2a\x31\x7e\x11\xfd\x39\x1a\x3b\x91\xfd\xe1\xa7\xa5\x92\x58\x93\x69\x5e\x59\x30\x3a\xfb\x60\xb9\xef\x7f\xa9\x51\x6f\xe2\x9b\xe8\x2a\xba\x6a\x5e\x9c\x9c\xf7\x26\x98\xcf\x62\xcf\x70\xfe\x49\xbc\x43\xa9\xec\x26\xbe\x8e\x5e\x44\x57\x71\xc5\xb2\x3b\xb6\xc4\xbc\x95\x44\x53\x51\x3b\xf8\xd9\xe4\x3e\xe6\xc3\xf7\x87\x2e\xfc\x1c\xc2\x4a\x55\xa2\xb4\xd1\x7b\x13\x5f\x47\x57\xb7\xd1\xb8\x1d\x38\xe6\xef\x04\x90\xd3\x48\xd4\x59\xb4\x42\x4d\xc8\x15\x61\x86\xd2\xa2\x86\x07\x1a\x3d\x2b\xb9\x0c\x0b\xe4\xcb\xc2\x4e\xe0\x6a\x3c\x3e\x9f\x9e\x1a\x5d\x15\x7e\x38\xe7\xa6\x12\x6c\x33\x81\x85\xc0\x7b\x3f\xc4\x04\x5f\xca\x90\x5b\x2c\xcd\x04\x3c\x67\x37\xb1\x75\x32\x2b\xad\x96\x1a\x8d\x69\x84\x55\xca\x70\xcb\x95\x9c\x10\xa2\x98\xe5\x2b\x3c\x45\x6b\x2a\x26\x8f\x16\xb0\xd4\x28\x51\x5b\x3c\x50\x24\x15\x2a\xbb\xf3\x63\x2e\x9a\xfb\x9b\xc8\x94\x50\x7a\x02\xeb\x82\x37\xcb\xc0\x09\x82\x4a\x63\xc3\x1e\x2a\x96\xe7\x5c\x2e\x27\xf0\xaa\x6a\xf6\x03\x25\xd3\x4b\x2e\x27\x30\xde\x2d\x99\xc5\xad\x19\x67\xb1\x3f\xb8\x9e\x9d\xcd\x52\x95\x6f\x9c\x0f\x73\xbe\x82\x4c\x30\x63\x92\xe0\xc0\xc4\xee\x40\xda\x23\xa0\x73\x88\x71\xd9\x4e\xed\xcd\x69\xb5\x0e\xc0\x09\x4a\x02\xaf\x44\x98\x2a\x6b\x55\x39\x81\x2b\x52\xaf\x59\x72\xc0\x4f\x84\x62\x19\x5e\x5d\xb7\x93\x67\xb3\xe2\xaa\x65\x62\xf1\xde\x86\xce\x3f\x9d\x67\x82\xf9\x8c\xb7\x6b\x17\x0c\x16\x2c\x4c\x99\x2d\x02\x60\x9a\xb3\xb0\xe0\x79\x8e\x32\x09\xac\xae\x91\x70\xc4\xe7\xd0\x3f\xfe\x1e\x39\xfd\x8a\xab\x56\xaf\x38\xe7\xab\x66\x5b\xbd\xc7\x83\x1d\x3e\xbe\x89\x5b\x68\x1e\xd4\x62\x61\xd0\x86\xbd\x3d\xf5\x88\xb9\xac\x6a\x1b\x2e\xb5\xaa\xab\x6e\xfe\x6c\xe6\x46\x81\xe7\x49\x50\x6b\x11\x34\xc7\xbf\x7b\xb4\x9b\xaa\x31\x45\xd0\x6d\x5c\xe9\x32\x24\x4f\x68\x25\x02\xa8\x04\xcb\xb0\x50\x22\x47\x9d\x04\x3f\xa8\x8c\x33\x01\xd2\xef\x19\x7e\xfc\xfe\x3f\xa0\x71\x19\x97\x4b\xd8\xa8\x5a\x43\xc1\x84\xa2\x45\x96\xd8\x00\xcb\x73\xc2\x6c\x14\x45\x3d\x6d\x1c\x80\x8f\xf5\x0d\x53\x2b\x77\x54\x67\xb3\xb4\xb6\x56\x75\x84\xa9\x95\x90\x5a\x19\xe6\xb8\x60\xb5\xb0\x90\x6b\x55\xe5\x6a\x2d\x43\xab\x96\x4b\x4a\x77\x7e\x27\x7e\x51\x00\x39\xb3\xac\x99\x4a\x82\x96\xb6\x75\x24\x33\x95\xaa\xea\xaa\x71\xa5\x1f\xc4\xfb\x8a\xc9\x1c\x73\x72\xbc\x30\x18\xcc\xbf\xe6\x2b\x84\x12\xe1\xef\x4c\xa8\xb3\x43\x58\x64\x4c\xa3\x0d\xfb\x3c\x8f\xc0\x31\x8b\xbd\x2e\x7e\x47\xd0\xfc\x9b\xd5\xa2\xe5\xd4\xed\xa0\x44\x59\xc3\xde\x5b\xa8\xe9\x6c\x09\xe6\x0f\x0f\x9a\xc9\x25\xc2\x73\x9e\xdf\x5f\xc2\x73\x56\xaa\x5a\x5a\x98\x24\x10\xbd\x76\x8f\x66\xbb\xdd\xe3\x0e\x30\x13\x7c\x3e\x63\x4f\x41\x1c\x94\xcc\x04\xcf\xee\x92\xc0\x72\xd4\xc9\xc3\x03\x31\xdf\x6e\xa7\xf0\xf0\xc0\x17\xf0\x3c\xfa\x1e\x33\x56\xd9\xac\x60\xdb\xed\x52\xb7\xcf\x11\xde\x63\x56\x5b\x1c\x8e\x1e\x1e\x50\x18\xdc\x6e\x4d\x9d\x96\xdc\x0e\xdb\xe5\x34\x2e\xf3\xed\x96\x74\x6e\xf4\xdc\x6e\x21\x26\xa6\x32\xc7\x7b\x78\x1e\x7d\x87\x9a\xab\xdc\x80\xa7\x9f\xc5\x6c\x3e\x8b\x05\x9f\x37\xeb\xf6\x8d\x14\xd7\x62\x07\x97\x98\xf0\xd2\x61\xdd\x85\x8e\x53\xb5\xaf\xe9\x89\x48\x58\x86\x9d\xf6\x0d\x1c\x0c\xb7\x78\x87\x9b\x24\x78\x78\xe8\xaf\x6d\x66\x33\x26\x44\xca\xc8\x2e\x7e\x6b\xdd\xa2\x5f\x91\x60\xba\xe2\xc6\x95\x55\xf3\x56\x83\x9d\xda\x1f\x18\xda\x07\x87\x97\x55\xd5\x04\x6e\xae\x7b\x27\xd7\xa9\xa8\x7f\x75\x10\xf5\x37\x27\x89\x2b\x26\x51\x80\xfb\x1b\x9a\x92\x89\xf6\xb9\x09\x96\x5e\xec\x1d\x2e\x0a\xe9\x9c\xee\x54\xeb\xce\xfb\xf1\x14\xd4\x0a\xf5\x42\xa8\xf5\x04\x58\x6d\xd5\x14\x4a\x76\xdf\xe5\xbc\x9b\xf1\xb8\xaf\x37\x95\x83\x2c\x15\xe8\x4e\x18\x8d\xbf\xd4\x68\xac\xe9\xce\x13\x3f\xe5\xfe\xd2\xb1\x92\xa3\x34\x98\x1f\x58\x83\x24\x92\x69\x1d\x55\xcf\xf5\x9d\x31\x4f\xea\xbe\x50\xaa\x4b\x23\x7d\x35\x1a\xd6\xbd\x8c\x17\xcc\x67\x56\xef\xe8\xce\x66\x36\xff\xa8\x34\xa0\xa9\xcc\x7b\x2c\x0b\xf8\x03\x8d\xf6\x5e\x21\x6a\x5f\x63\x10\x64\xc1\xbd\xce\x62\x9b\x7f\x82\x64\x02\x61\xca\x0c\x7e\x88\x78\x97\xed\x77\xe2\xdd\xeb\xa7\xca\x2f\x90\x69\x9b\x22\xb3\x1f\xa2\xc0\xa2\x96\x79\x6f\xff\x74\x74\x7e\xaa\xfc\x5a\xf2\x15\x6a\xc3\xed\xe6\x43\x15\xc0\x7c\xa7\x81\x7f\xdf\x57\x61\x16\x5b\xfd\x34\xd4\xfa\x2f\x9f\x29\xb6\x7f\xab\x2a\xb9\x99\xff\x5d\xad\x21\x57\x68\xc0\x16\xdc\x00\xe5\xd7\x2f\x67\x71\x71\xd3\x91\x54\xf3\x77\x34\x41\x36\x85\x85\x2b\x2e\x80\x1b\xd0\xb5\x74\xb9\x57\x49\xb0\x05\xee\x17\x24\x4d\x9a\x8e\xe0\x9d\xa2\xa2\x6e\x85\xd2\x42\xc9\x04\xcf\xb8\xaa\x0d\xb0\xcc\x2a\x6d\x60\xa1\x55\x09\x78\x5f\xb0\xda\x58\x62\x44\x87\x07\x5b\x31\x2e\x5c\x24\x39\x87\x82\xd2\xc0\xb2\xac\x2e\x6b\x2a\x4a\xe5\x12\x50\xaa\x7a\x59\x78\x55\xac\x02\x9f\x95\x84\x92\xcb\x4e\x1d\x53\xb1\x12\x98\xb5\x2c\xbb\x33\x97\xd0\x1e\x09\xc0\x34\x82\xe5\x98\xd3\xaa\x4c\x95\xa5\x92\x70\xa3\x73\xa8\x98\xb6\x1b\x30\xfb\xc5\x05\xcb\x32\x97\xe2\x22\x78\x2d\x37\x4a\x22\x14\x6c\xe5\x14\x84\x77\xfe\x3e\x71\x09\x5f\x2b\xb5\x14\x78\x41\xfa\xfd\x8d\x65\x98\x2a\xd5\x2d\x83\x92\x6d\x5a\xb9\xcd\x2e\xd6\xdc\x16\xdc\x9b\xa9\x42\x5d\x12\x8f\x1c\x04\x2f\xb9\x35\xd1\x2c\xae\x76\xe7\xea\x2e\x43\x8b\xb0\x50\x9a\xff\x4a\x25\x8e\xe8\x1f\xa2\xf6\xe0\x88\x69\x4f\x48\xe7\x7c\x81\x0b\x3b\x81\x17\xfe\x84\x3c\x84\x73\x73\x17\x3a\x85\xe5\x96\xa7\xbb\x63\x52\xda\x99\xc0\x8d\x2f\x6c\x7d\x39\x91\xdb\x9e\x06\xf9\x01\xe2\xbc\xd0\xdb\xdb\xea\xbe\xd3\xa3\xab\x8e\xc7\x1d\x13\x42\xc2\xbe\x51\x56\xbc\x67\xcf\x92\xdd\x21\x30\x98\xb1\x83\xbb\x72\xa3\xb4\xbb\x69\x71\xd7\x29\x88\xed\x1a\xd1\x7e\x49\x11\x9c\x7c\xef\x19\x72\xb9\x3c\xbf\x1e\x7b\x64\xd2\x03\xb1\x3f\xbf\x1e\x73\x69\xd5\xf9\xf5\x78\x7c\x3f\xfe\xc0\x7f\xe7\xd7\x63\x25\xcf\xaf\xc7\xb6\xc0\xf3\xeb\xf1\xf9\xf5\x4d\x1f\xd3\xe7\xd7\x63\x2a\x30\xcf\xaf\xc7\x6d\x89\x49\x94\x68\x48\x62\x0b\xf7\x00\x2c\xd3\x4b\xb4\x49\xf0\x3f\x2c\x55\xb5\x9d\xa4\x82\xc9\xbb\x60\xee\x54\xa6\xba\xc3\x21\xc1\x57\xab\x0e\xc2\xdf\x1d\x54\xab\x50\x31\x43\xd8\x20\xd5\x1d\x5c\x9a\xf6\x88\x81\xa1\xa9\xb5\x56\xb5\xa4\x24\x09\xb4\x79\x17\xb1\x72\x40\x70\x23\x0b\x8d\xa2\x59\xaa\xe3\xf9\x1b\x55\x6d\x42\xc7\xc4\x2d\x3f\xb2\xa7\xa9\xab\x4a\x69\x1b\xf5\xed\xca\xe8\x6a\x24\xd0\xc4\xb7\xe3\x97\xb7\xaf\x9e\xdc\x83\xa1\xc2\xdb\x6d\xa4\xd3\x90\xa5\x6a\x85\xe0\xcb\xfc\x54\xdd\x03\x93\x39\x2c\xb8\x46\x60\x6b\xb6\xf9\x62\x16\xe7\xee\x52\xf6\xe9\xf0\x5d\xba\x88\x0b\x2b\x51\x1b\xaa\x48\x38\x45\xec\x1f\x0a\xcb\xfe\x48\x80\xef\x44\x6d\x2e\xa1\xaa\x53\xc1\x4d\x01\x0c\x24\xae\x61\x66\xac\x56\x72\x39\x77\xa3\x19\x5d\x5a\xdd\x2b\x54\xca\xd8\xdf\x84\x04\x96\x29\xe6\xf9\x09\x50\xfc\x4e\x4c\x90\x50\xe7\xc7\xff\x7f\x1f\x2e\x9a\xa3\xf2\x0f\xe5\xb7\xf6\xfc\xfe\x43\x3b\xed\x28\x90\xd7\xeb\x75\xd4\x9a\xd3\x45\x71\x81\xa2\x8a\x29\xb3\xd5\x92\xdb\x4d\xec\x0f\x46\x25\xe3\x2f\x79\x9e\x5c\xdf\x5e\xbf\x7a\x75\xfd\xe2\xdf\x6e\x5f\xbe\xbc\xbe\x7d\xf1\xf2\xb1\x10\xef\x90\xf1\xfb\x23\xdc\x5f\x8f\xbe\x51\xaf\x6b\x5b\x74\x77\x23\x0f\x9a\xb6\x26\xa7\xd2\x2b\xa7\xbb\xa5\x0e\x7e\x37\x90\x6a\x49\x05\x66\xc8\xc4\xc9\xda\xf0\x23\xa0\xe4\xb0\xf4\x84\x66\x9f\x88\xaf\x16\x43\x04\x17\x55\x5b\xda\x61\xdb\xa8\xe1\x4a\x76\x98\xba\x04\xc3\xcb\x4a\x6c\x20\xdb\x79\xfd\x09\x70\x3d\xea\x99\xdf\xc4\xd6\xbe\xef\x3c\xd2\x5c\x6d\x57\xaa\x1c\xa9\xa8\x33\xb5\xc9\xb0\x72\x6d\x7c\xaa\x94\xfe\xb2\xf9\x95\x49\xcb\x25\xb6\x15\x55\x04\xdf\x4a\xb1\x81\xda\x20\x2c\x94\x86\x1c\xd3\x7a\xb9\x74\x55\xa0\x86\x4a\xf3\x15\xb3\xd8\x96\x51\xa6\x81\x46\x87\x8c\xde\xb5\x95\x0a\x5a\xd1\xab\x2f\xff\xa1\x6a\xc8\x98\x04\xab\x59\x76\xe7\xc3\xa5\xd6\x9a\xc2\xa5\x42\xbf\x9b\xae\x90\x4b\x51\xa8\xb5\x23\xf1\xfb\x5e\x70\x14\xae\xaa\x33\x88\x50\xa8\x35\x94\x75\xe6\x42\x93\xaa\x36\xb7\x89\x35\xe3\x16\x6a\x69\xb9\xf0\x46\xb5\xb5\x96\x54\x03\xe2\x5e\xf1\x75\x74\xb1\x9f\x61\x39\x7f\x57\xe0\x89\x8a\xb7\xbb\x92\x83\xc6\x37\x9e\x1c\x2a\xad\x2c\x66\xe4\x55\x60\x4b\xc6\xa5\x21\x8f\xb8\xf2\x0e\xcb\x0f\xb8\xb2\x77\x4f\xcd\xc3\xae\x05\xed\xa6\xe3\x18\xbe\x16\x2a\x65\x02\x56\x04\xf7\x54\x50\xb1\xae\xa0\x50\xb4\xf5\x9e\xb5\x8c\x65\xb6\x36\xa0\x16\x6e\xd4\x6b\x4e\xeb\x57\x4c\x93\x07\xb1\xac\x2c\x24\x4d\x03\x95\xc6\x0c\xea\x55\xd3\x16\xa6\x57\xcb\x51\xef\xcd\x77\x56\x4f\xe0\xa7\x9f\xa7\xcf\x1a\x55\xfe\x8a\x0b\x07\x09\x02\xb9\xdf\xb2\x2d\x98\x85\x4c\x23\xb3\x68\x20\x13\xca\xd4\xda\x6b\x98\x6b\x55\x01\x69\xd9\x72\x6a\x39\xd3\x44\xe5\xa4\xb5\x4c\x86\x05\x33\xc5\xa8\xe9\xff\x6a\x74\x5e\xea\xe6\xda\xf1\x33\x42\xdd\x90\x18\xf0\x64\x3c\x05\x3e\x6b\xf9\x46\x02\xe5\xd2\x16\x53\xe0\x17\x17\x1d\xf1\x19\x5f\xc0\xb0\xa5\xf8\x89\xff\x1c\xd9\xfb\x88\xa4\x40\x92\x40\x5f\x9a\x13\xd8\xf0\x31\x95\xe0\x19\x0e\xf9\x25\x5c\x8d\xa6\xed\x6c\xaa\x91\xdd\xb5\x6f\x8d\x1f\xfd\x7f\xee\xef\x76\xba\x6f\x19\x67\xfc\x3d\xdb\xf8\xc6\x8e\x01\x06\x4b\x6e\x2c\xd4\x5a\x40\x13\xc3\xde\x05\x9d\x43\x1c\x5d\xdf\x2a\x47\xb8\x6c\x1e\x1a\x4c\xb5\x5b\xf0\x6c\x22\x83\x32\x1f\xfe\xfb\x0f\xdf\x7e\x13\x19\xab\xb9\x5c\xf2\xc5\x66\xf8\x50\x6b\x31\x81\xe7\xc3\xe0\x5f\x6a\x2d\x82\xd1\x4f\xe3\x9f\xa3\x15\x13\x35\x5e\x3a\x7f\x4f\xdc\xdf\x23\x29\x97\xd0\x3c\x4e\x60\x5f\xe0\x76\x34\x9a\x9e\x6e\x82\xf5\x7a\x76\x1a\x0d\xda\x21\x11\x76\xc0\x3f\xb4\x11\x83\x12\x6d\xa1\x5c\xe8\x6a\xcc\x94\x94\x98\x59\xa8\x2b\x25\x1b\x93\x80\x50\xc6\xec\x80\xd8\x52\x24\xc7\xa0\x68\xe8\x13\x97\xb6\xff\x0b\xd3\x1f\x54\x76\x87\x76\x38\x1c\xae\xb9\xcc\xd5\x3a\x12\xca\x9f\xb7\x11\x05\xa9\xca\x94\x80\x24\x49\xa0\x49\xa5\xc1\x08\xbe\x84\x60\x6d\x28\xa9\x06\x30\xa1\x47\x7a\x1a\xc1\x05\x1c\x2e\x2f\x28\xf3\x5f\x40\x10\xb3\x8a\x07\x23\x1f\x0e\xad\xe1\x95\x2c\xd1\x18\xb6\xc4\xbe\x82\xee\xe2\xdb\x81\x8c\xf6\x51\x9a\x25\x24\xe0\x1c\x54\x31\x6d\xd0\x93\x44\x39\xb3\xac\x45\x1b\x61\xd6\x91\x25\x09\xc8\x5a\x88\x1d\x48\x7d\x50\x4c\x5b\xf8\xed\x91\x47\x3e\xe1\x7c\x91\x24\x50\xcb\xdc\x99\x38\xdf\xad\x24\xe7\xfb\x0e\xc9\x28\xa2\xbc\xb0\x5b\x31\x9a\xf6\xd1\xbc\xc7\x0d\xf3\xdf\x62\x87\xf9\x21\x3f\xcc\x1f\x61\xe8\x1a\x52\x4f\xf1\xf3\x0d\xac\x1e\x3b\x37\xf0\x08\x37\x59\x97\x29\xea\xa7\xd8\xf9\x86\x54\xc3\xce\x99\xfa\xad\xb4\xbd\xb5\x97\x70\xf5\x6a\xf4\x08\x77\xd4\x5a\x3d\xca\x5c\x2a\xbb\x19\x3e\x08\xb6\xa1\xc2\x09\x06\x56\x55\x6f\x5c\x03\x69\x70\xe9\x32\xee\x04\x3a\x0e\x97\xee\xc3\xc0\x04\x06\xee\x8d\xe6\x79\x89\x6e\xd5\xcb\xf1\x78\x7c\x09\xed\x67\xb5\xbf\x30\x0a\x42\x5d\xe3\xf6\x11\x7d\x4c\x9d\x65\x94\xf7\x3f\x45\xa3\x86\x47\xa7\x53\xf3\xfe\x09\x5a\x75\xb9\x61\x4f\x2d\xf8\xd3\x9f\xe0\x68\x76\x1f\xc6\x71\x0c\xff\xc9\xf4\x9d\xeb\xf7\x54\x1a\x57\xae\x27\xd4\xd1\x97\xdc\x18\xd7\x6c\x31\x90\x2b\x89\xcd\x9a\x8f\x3b\xf6\x8f\x74\x6c\xc8\x60\x0e\xe3\x43\x05\xe9\x38\xec\xa5\x85\x13\xd9\xa2\xc7\x77\x3f\x11\x9c\x6d\xfb\xf2\xf6\x56\xf2\x12\xe1\x8b\x04\x82\xa0\xbf\xf8\x88\x82\x08\x3a\x66\x67\x06\xed\x3b\xef\x8b\x61\x93\x1d\x4f\xe5\xae\xd1\x25\xdc\x8c\xc7\xe3\xd1\x91\x12\xdb\x9d\x79\x5f\x57\x54\x36\x01\x93\x1b\x77\x24\x76\xb6\x75\x85\x23\x95\x40\x74\xa4\x09\xc8\x94\x10\xbe\x66\x69\x96\x92\x81\x9b\xe6\x58\x02\xe1\xd5\xf4\x44\x16\xed\x59\xb2\xb7\xb5\x43\xf7\x9c\xb0\xfd\xa1\x8b\xf6\x6d\x76\x40\x1c\x5e\xed\x39\x65\xcf\x5f\xa7\x1d\x73\xd6\xe9\xcd\x77\x16\x3d\x70\xd7\xce\x5f\x87\x36\xeb\xe9\xef\xf9\x5c\x5c\x7d\xe0\x36\xba\xe9\xaa\x36\xc5\xf0\x40\xd1\xd1\xf4\xd8\x37\x6f\x2d\x6a\xaa\x92\x15\xa5\x2c\xf2\x05\xdd\x07\x34\x1e\xb9\xc4\x95\xea\x1a\x43\x8d\x32\x47\xdd\x96\x14\xbe\xb2\xa7\x02\x70\xcf\x65\xfe\x6a\xd9\x87\xd3\x47\x06\x8c\x2b\xc9\x94\x44\x00\x80\x83\x20\x70\x40\xdd\x43\x2a\x11\xa3\x60\x95\xc1\x1c\x12\xf0\xbf\x72\x18\x8e\xa2\x5a\xf2\xfb\xe1\x28\x6c\xde\x0f\x79\xb4\xf3\xd3\xee\xae\xd8\xaa\x7d\x91\x40\x30\xb3\x1a\x78\x9e\x0c\x02\xb8\x38\x15\x82\x94\x75\x07\xf3\x9d\x06\xfd\xa5\x00\x33\x9b\xcf\x5d\x97\xdb\x5f\xda\xfe\x19\xa4\x2c\xbb\x5b\xba\x8b\xd0\x84\x4a\xad\xe1\x11\x5b\xb6\x62\x96\x69\xc7\x75\x34\x85\x1d\x79\x73\x5b\xcc\xc8\x39\x53\xf0\xd7\x52\xd7\x4c\x87\xee\xfb\x93\x7b\x4b\x95\xce\x51\x87\x9a\xe5\xbc\x36\x13\x78\x51\xdd\x4f\xff\xd9\x7e\x9f\x73\x2d\xff\x27\x55\xad\x34\xce\x8f\x34\x6a\x9a\xc7\x17\x10\xcc\x62\x22\xf8\x2d\x36\xdd\x66\xfb\xbf\xae\x80\x13\x1f\x36\xa0\xfb\xed\x43\x33\x5e\xf2\x3c\x17\x48\x0a\xef\xd8\x53\x30\x92\xff\xfb\x21\xb5\x2f\x12\x9a\x2f\x1a\xbb\x35\x5b\x40\x61\xf0\x89\x05\xdd\xc7\x91\x01\x01\x20\xa4\x2d\x73\x67\xf3\xe6\xc6\xed\x86\xf5\xc0\xd9\xa2\xf9\xad\x4c\x5e\x6b\x57\x6b\x0d\xc3\x06\x60\x97\x30\x30\x54\xfb\xe5\x66\x30\x8a\x8a\xba\x64\x92\xff\x8a\x43\xca\x4b\x23\x6f\x2b\xf7\xb5\x25\x38\x3e\x92\x8f\x94\xd9\x7d\x06\x19\xb4\x39\x6e\xd0\x18\x71\xd0\x7a\xf7\xc5\xee\x82\x3f\x81\xf1\x74\xf0\x91\x16\x3a\x2d\x25\x4c\x99\x86\xfe\x4b\xd8\x26\x5f\xd0\x8a\xa4\xb7\x73\x29\xd3\x03\xdf\xce\x70\xf5\xb9\x54\xeb\x64\x70\x33\xee\x94\xf4\x8e\x76\x7e\x1e\x34\x58\x3b\x72\x06\x69\xd9\x86\xe6\x1c\x6e\xc6\x9f\x43\x5b\xdf\x12\x39\xd8\x81\xd5\xbc\xc2\x1c\x58\x66\xf9\x0a\xff\x0f\x36\xf2\x19\x8c\xfc\xd1\x2a\x12\x0e\x5b\xe3\x39\x98\xee\xe9\x4b\xb3\x9d\x6d\xff\x95\xe2\x0d\x62\x67\xe1\x0b\x08\x4e\x6e\xe4\x51\x24\x1e\x10\x1e\x84\xf6\xe3\x71\xef\x3e\x1f\x06\x87\x39\x85\xaa\xdd\xee\xcb\xf7\x28\x2a\x6c\x29\x86\xc1\xcc\xba\x5f\x41\x91\xce\x1d\x07\xc7\xc0\x0f\xef\x97\x74\xdb\xfd\x8b\x0c\xdd\xdf\xf1\xe0\x9e\x05\xbd\xe2\xa4\xbb\x8b\xb5\x95\x08\x6c\x77\x3f\x16\x8b\x63\xf8\xc1\x32\x6d\x81\xc1\x8f\x6f\xa1\xae\x72\x66\x29\x7b\x29\xa0\xfc\xe8\xfb\xcf\xed\xaf\xc9\x52\xa6\x0d\x2c\x94\x5e\x33\x9d\x37\xfd\x19\x5b\xe0\xc6\x7d\xaa\x6b\x4b\x3f\x83\xf6\x2d\x9d\x62\x2b\x26\x86\x47\xf7\xbe\xe7\xc3\x41\xd4\x77\xf9\x60\x14\x21\xcb\x8a\x63\x42\x97\xb1\x3a\xb9\x09\x7c\xe3\xae\x00\xc3\xe7\x43\x5b\x70\x33\x8a\x98\xb5\x7a\x38\xd8\x03\xc3\x60\x44\x7e\xbd\xea\x5d\xc9\xba\xe5\xb3\xbd\xb0\x7a\x8a\xc7\xae\x98\xee\x0a\x81\x96\x3c\x33\x66\xe8\x71\x35\xb8\xec\xf1\xde\x87\xd5\xe0\x7c\xd0\x39\x6a\x17\xde\xbb\x7d\x24\x27\x35\xd9\x63\x3d\xa0\x28\x1b\x1c\x89\x67\x79\xfe\x86\xe2\x67\x18\x9c\x88\xf4\x43\x74\x8c\x3a\x63\xfb\xf3\xfa\x49\x2b\xfb\xdf\xdc\x3c\x62\x62\x9e\x0f\x46\x91\xa9\x53\xdf\x9b\x18\xbe\xec\x2e\x60\x2d\x99\x03\xef\x61\x2a\x38\x2a\x28\x48\xc4\x7e\x51\x11\x1e\x14\x21\x4f\x64\x8d\x46\xa4\xdf\xd5\xf6\x92\x0c\x3e\x1e\x75\xad\xad\xaf\x0c\x15\x57\xfe\x23\xc0\x1a\x53\xe3\x3a\x09\xd0\xe0\xdd\x75\x73\x7c\xd7\xe6\xf5\x77\x6f\x7b\x9d\x9b\x2e\x22\x86\x8e\x7b\xf7\x43\xcf\x53\x7d\x92\x93\xbf\x2c\x5d\xaf\xd7\x91\xff\xc0\xe5\x7a\xf9\x5d\x23\x25\x66\x15\x8f\xde\x9b\x00\x98\xd9\xc8\x0c\x72\x5c\xa0\x9e\xf7\xd8\x37\xdd\x95\x59\xec\x7f\xf3\x38\x8b\xfd\xcf\xba\xff\x37\x00\x00\xff\xff\xb8\xe6\x8e\x0e\xe7\x2d\x00\x00")

func faucetHtmlBytes() ([]byte, error) {
	return bindataRead(
		_faucetHtml,
		"faucet.html",
	)
}

func faucetHtml() (*asset, error) {
	bytes, err := faucetHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "faucet.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"faucet.html": faucetHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"faucet.html": {faucetHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
