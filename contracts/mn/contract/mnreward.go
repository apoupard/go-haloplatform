// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"math/big"
	"strings"

	"github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// MNFactoryABI is the input ABI used to generate the binding from.
const MNFactoryABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"_mnAdminAddr\",\"type\":\"address\"}],\"name\":\"setMNAdminAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mnRewardAddr\",\"type\":\"address\"}],\"name\":\"setMNRewardAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nodeAddr\",\"type\":\"address\"},{\"name\":\"_withdrawValue\",\"type\":\"uint256\"}],\"name\":\"withdrawFromInitializedMN\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tier\",\"type\":\"uint8\"}],\"name\":\"increaseActivatedCount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNodeList\",\"outputs\":[{\"name\":\"_node_list\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mnMarketplaceAddr\",\"type\":\"address\"}],\"name\":\"setMNMarketplaceAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_nodeAddr\",\"type\":\"address\"}],\"name\":\"getNodeSumInfo\",\"outputs\":[{\"name\":\"_id\",\"type\":\"uint32\"},{\"name\":\"_tier\",\"type\":\"uint8\"},{\"name\":\"_state\",\"type\":\"uint8\"},{\"name\":\"_is_private\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nodeAddr\",\"type\":\"address\"}],\"name\":\"joinToInitializedMN\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getMNCount\",\"outputs\":[{\"name\":\"_count\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tier\",\"type\":\"uint8\"}],\"name\":\"getNodeCount\",\"outputs\":[{\"name\":\"_count\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tier\",\"type\":\"uint8\"},{\"name\":\"_is_private\",\"type\":\"bool\"},{\"name\":\"_is_halo_hosting\",\"type\":\"bool\"},{\"name\":\"_alias\",\"type\":\"string\"},{\"name\":\"_ipv4_address\",\"type\":\"string\"},{\"name\":\"_other_owners\",\"type\":\"address[]\"},{\"name\":\"_other_shares\",\"type\":\"uint256[]\"}],\"name\":\"initializeMN\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getMNAddrByIndex\",\"outputs\":[{\"name\":\"_mnAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"destroyer\",\"type\":\"address\"},{\"name\":\"_nodeAddr\",\"type\":\"address\"}],\"name\":\"adminDestroyMN\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_tier\",\"type\":\"uint8\"}],\"name\":\"getActivatedNodeCount\",\"outputs\":[{\"name\":\"_count\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_nodeAddr\",\"type\":\"address\"}],\"name\":\"adminRemoveMN\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_nodeAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_nodeId\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"_eventType\",\"type\":\"uint8\"}],\"name\":\"Event_MNFactory\",\"type\":\"event\"}]"

// MNFactoryBin is the compiled bytecode used for deploying new contracts.
const MNFactoryBin = `0x608060405234801561001057600080fd5b5060008054600160a060020a03191633600160a060020a0316178155681b1ae4d6e2ef500000600455683635c9adc5dea0000060075568878678326eac900000600a556901969368974c05b00000600d556005805461138861ffff1991821617909155600880548216610fa0179055600b80546103e8908316179055600e80549091166101f417905561380b9081906100a990396000f300608060405260043610620000d05763ffffffff60e060020a60003504166229185b8114620000d557806304e2777714620000fb57806313a30791146200011f5780632fbb92b1146200014657806353f3b713146200016457806361443a5f14620001ce578063656ff37614620001f2578063726c4d6f14620002495780637a0582b9146200025f578063993ed2a51462000289578063ae75bf5e14620002be578063c1599d2c146200030a578063c51fc5a71462000341578063ce46ae46146200036b578063ee7fd7561462000389575b600080fd5b348015620000e257600080fd5b50620000f9600160a060020a0360043516620003ad565b005b3480156200010857600080fd5b50620000f9600160a060020a03600435166200040f565b3480156200012c57600080fd5b50620000f9600160a060020a036004351660243562000471565b3480156200015357600080fd5b50620000f960ff6004351662000699565b3480156200017157600080fd5b506200017c620006e2565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015620001ba578181015183820152602001620001a0565b505050509050019250505060405180910390f35b348015620001db57600080fd5b50620000f9600160a060020a036004351662000747565b348015620001ff57600080fd5b5062000216600160a060020a0360043516620007a9565b6040805163ffffffff909516855260ff938416602086015291909216838201529015156060830152519081900360800190f35b620000f9600160a060020a03600435166200092d565b3480156200026c57600080fd5b506200027762000b38565b60408051918252519081900360200190f35b3480156200029657600080fd5b50620002a760ff6004351662000b3e565b6040805161ffff9092168252519081900360200190f35b620000f96004803560ff16906024803515159160443515159160643580820192908101359160843580820192908101359160a43580820192908101359160c43590810191013562000b71565b3480156200031757600080fd5b506200032560043562000dc7565b60408051600160a060020a039092168252519081900360200190f35b3480156200034e57600080fd5b50620000f9600160a060020a036004358116906024351662000df4565b3480156200037857600080fd5b50620002a760ff6004351662000e95565b3480156200039657600080fd5b50620000f9600160a060020a036004351662000ec8565b60005433600160a060020a03908116911614620003c957600080fd5b6000600160a060020a03821611620003e057600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60005433600160a060020a039081169116146200042b57600080fd5b6000600160a060020a038216116200044257600080fd5b6003805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600084925082600160a060020a031663f3fef3a333866040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b158015620004dd57600080fd5b505af1158015620004f2573d6000803e3d6000fd5b5050505082600160a060020a0316639f999da36040518163ffffffff1660e060020a028152600401600060405180830381600087803b1580156200053557600080fd5b505af11580156200054a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260e08110156200057457600080fd5b815160208301516040840151606085015160808601805194969395929491939283019291640100000000811115620005ab57600080fd5b82016020810184811115620005bf57600080fd5b8151640100000000811182820187101715620005da57600080fd5b50509291906020018051640100000000811115620005f757600080fd5b820160208101848111156200060b57600080fd5b81516401000000008111828201871017156200062657600080fd5b50969a5094985050505060ff861615159450620006929350505050576200064d85620010a1565b620006593386620010fa565b6040805163ffffffff84168152600560208201528151600160a060020a03881692600080516020620037c0833981519152928290030190a25b5050505050565b600460ff600019830116818110620006ad57fe5b600302016001908101805465ffff000000001981166401000000009182900461ffff9081169094019093160291909117905550565b606060108054806020026020016040519081016040528092919081815260200182805480156200073c57602002820191906000526020600020905b8154600160a060020a031681526001909101906020018083116200071d575b505050505090505b90565b60005433600160a060020a039081169116146200076357600080fd5b6000600160a060020a038216116200077a57600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600080600080600080600080600089945084600160a060020a0316639f999da36040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015620007f957600080fd5b505af11580156200080e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260e08110156200083857600080fd5b8151602083015160408401516060850151608086018051949693959294919392830192916401000000008111156200086f57600080fd5b820160208101848111156200088357600080fd5b81516401000000008111828201871017156200089e57600080fd5b50509291906020018051640100000000811115620008bb57600080fd5b82016020810184811115620008cf57600080fd5b8151640100000000811182820187101715620008ea57600080fd5b5050929190602001805190602001909291905050509091509050508095508197508294508396505050505083838383985098509850985050505050509193509193565b600080600083925082600160a060020a03166328ffe6c834336040518363ffffffff1660e060020a0281526004018082600160a060020a0316600160a060020a031681526020019150506000604051808303818588803b1580156200099157600080fd5b505af1158015620009a6573d6000803e3d6000fd5b505050505082600160a060020a0316639f999da36040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015620009ea57600080fd5b505af1158015620009ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260e081101562000a2957600080fd5b81516020830151604084015160608501516080860180519496939592949193928301929164010000000081111562000a6057600080fd5b8201602081018481111562000a7457600080fd5b815164010000000081118282018710171562000a8f57600080fd5b5050929190602001805164010000000081111562000aac57600080fd5b8201602081018481111562000ac057600080fd5b815164010000000081118282018710171562000adb57600080fd5b50969a5094985050505060ff861660021415945062000b329350505050576040805163ffffffff84168152600460208201528151600160a060020a03871692600080516020620037c0833981519152928290030190a25b50505050565b60105490565b6000600460ff60001984011681811062000b5457fe5b6003020160010160029054906101000a900461ffff169050919050565b62000b7b6200184f565b600154600090600160a060020a0316811062000b9657600080fd5b6002546000600160a060020a039091161162000bb157600080fd5b6003546000600160a060020a039091161162000bcc57600080fd5b60ff8d166020808401919091528c151560608401528b1515608084015260408051878302818101840190925287815262000c499285928a918a9182918501908490808284375050604080516020808d0282810182019093528c82529095508c94508b9350839250850190849080828437506200115d945050505050565b60ff1660408084019190915280516020808802828101820190935287825262000d1d928592918a918a918291908501908490808284375050604080516020808d0282810182019093528c82529095508c94508b93508392508501908490808284378201915050505050508b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050508e8e8080601f016020809104026020016040519081016040528093929190818152602001838380828437506200140c945050505050565b63ffffffff168352604083015190915060ff166001141562000d7b5781516040805163ffffffff9092168252600160208301528051600160a060020a03841692600080516020620037c083398151915292908290030190a262000db8565b81516040805163ffffffff9092168252600460208301528051600160a060020a03841692600080516020620037c083398151915292908290030190a25b50505050505050505050505050565b600060108281548110151562000dd957fe5b600091825260209091200154600160a060020a031692915050565b60015460009033600160a060020a0390811691161462000e1357600080fd5b50604080517ef55d9d000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529151839283169162f55d9d91602480830192600092919082900301818387803b15801562000e7757600080fd5b505af115801562000e8c573d6000803e3d6000fd5b50505050505050565b6000600460ff60001984011681811062000eab57fe5b6003020160010160049054906101000a900461ffff169050919050565b6001546000908190819033600160a060020a0390811691161462000eeb57600080fd5b6010546000935091505b8183101562000f465783600160a060020a031660108481548110151562000f1857fe5b600091825260209091200154600160a060020a0316141562000f3a5762000f46565b60019092019162000ef5565b81831015620010135760018301821462000fc35760108054600019840190811062000f6d57fe5b60009182526020909120015460108054600160a060020a03909216918590811062000f9457fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b60108054600019840190811062000fd657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff191690556010805490620010119060001983016200187d565b505b6200101e84620007a9565b50909250600091506004905060ff6000198401168181106200103c57fe5b6003020160010160029054906101000a900461ffff1661ffff16111562000b3257600460ff6000198301168181106200107157fe5b60030201600101805463ffff0000198116620100009182900461ffff908116600019011690910217905550505050565b601054600090815b8183101562000f465783600160a060020a0316601084815481101515620010cc57fe5b600091825260209091200154600160a060020a03161415620010ee5762000f46565b600190920191620010a9565b604080517ef55d9d000000000000000000000000000000000000000000000000000000008152600160a060020a0384811660048301529151839283169162f55d9d91602480830192600092919082900301818387803b15801562000e7757600080fd5b6000806000806001876020015160ff16101580156200118457506004876020015160ff1611155b15156200119057600080fd5b6004600188602001510360ff16600481101515620011aa57fe5b6003020160010160009054906101000a900461ffff1661ffff166004600189602001510360ff16600481101515620011de57fe5b600302016001015462010000900461ffff1610620011fb57600080fd5b606087015115156200123157866020015160ff1660011480620012255750866020015160ff166002145b15156200123157600080fd5b670de0b6b3a764000034101580156200126857506004600188602001510360ff166004811015156200125f57fe5b60030201543411155b80156200127d5750670de0b6b3a76400003406155b15156200128957600080fd5b60608701511515620012ec5760808701511515600114620012a957600080fd5b8551158015620012d657506004600188602001510360ff16600481101515620012ce57fe5b600302015434105b1515620012e257600080fd5b6001925062001401565b6004600188602001510360ff166004811015156200130657fe5b6003020154341015620013fc576000865111801562001326575085518551145b15156200133257600080fd5b5034905060005b8551811015620013d157670de0b6b3a764000085828151811015156200135b57fe5b90602001906020020151101580156200139e5750670de0b6b3a764000085828151811015156200138757fe5b906020019060200201518115156200139b57fe5b06155b1515620013aa57600080fd5b8481815181101515620013b957fe5b60209081029091010151919091019060010162001339565b6004600188602001510360ff16600481101515620013eb57fe5b60030201548214620012e257600080fd5b600292505b509095945050505050565b6003805477ffffffff0000000000000000000000000000000000000000198116740100000000000000000000000000000000000000009182900463ffffffff9081166001011691820217909155855260008080803430338a8a6200146f620018a9565b8085600160a060020a0316600160a060020a0316815260200184600160a060020a0316600160a060020a031681526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015620014e2578181015183820152602001620014c8565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156200152357818101518382015260200162001509565b5050505090500196505050505050506040518091039082f0801580156200154e573d6000803e3d6000fd5b50601080546001810182556000919091527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67201805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831617905560208b0151909350600491506000190160ff16818110620015c457fe5b600302016001908101805463ffff0000198116620100009182900461ffff908116909401909316029190911790555060208801518190600160a060020a03821690638473a590906004600019820160ff168181106200161f57fe5b60030201600001548c606001518d600001518e604001518f608001518d8d6040518963ffffffff1660e060020a028152600401808960ff1660ff168152602001888152602001871515151581526020018663ffffffff1663ffffffff1681526020018560ff1660ff168152602001841515151581526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015620016d6578181015183820152602001620016bc565b50505050905090810190601f168015620017045780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015620017395781810151838201526020016200171f565b50505050905090810190601f168015620017675780820380516001836020036101000a031916815260200191505b509a5050505050505050505050600060405180830381600087803b1580156200178f57600080fd5b505af1158015620017a4573d6000803e3d6000fd5b5050600154600254600354604080517fbe854c1d000000000000000000000000000000000000000000000000000000008152600160a060020a0394851660048201529284166024840152908316604483015251918516935063be854c1d925060648082019260009290919082900301818387803b1580156200182557600080fd5b505af11580156200183a573d6000803e3d6000fd5b50509951929a92995091975050505050505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b815481835581811115620018a457600083815260209020620018a4918101908301620018ba565b505050565b604051611ee480620018dc83390190565b6200074491905b80821115620018d75760008155600101620018c1565b50905600608060405260405162001ee438038062001ee4833981016040908152815160208084015183850151606086015160008054600160a060020a0380881665010000000000027fffffffffffffff0000000000000000000000000000000000000000ffffffffff909216919091178255346004819055908516808352600e90965296812096909655600d80546001810182559087527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5018054600160a060020a031916909417909355850180519395919490939290910191811080156100e4575082518251145b15610196575060005b825181101561019657600f838281518110151561010657fe5b6020908102919091018101518254600181018455600093845291909220018054600160a060020a031916600160a060020a03909216919091179055815182908290811061014f57fe5b9060200190602002015160106000858481518110151561016b57fe5b6020908102909101810151600160a060020a03168252810191909152604001600020556001016100ed565b5050505050611d3980620001ab6000396000f3006080604052600436106101685763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041662f55d9d811461016d57806302207294146101905780630f6a134f146101ab578063171c00fd146101de5780631865c57d146101fb5780631fdfb43e1461022657806328ffe6c8146102e7578063310e6e3a146102fb5780633268e7bc14610337578063393c8fa814610337578063448115851461035857806356de96db1461038557806358100370146103a05780635a9b0b89146104055780635ad701c21461055e5780635d1ca631146105735780637117c4a7146105a15780638473a590146105ea5780638f73c5ae1461063f5780639f999da314610647578063b326e9fd146103a0578063be854c1d14610779578063c8b04290146107a6578063ce88de60146107ca578063e236a397146107df578063f096ca8b14610800578063f3fef3a314610824578063fbe7db8514610848575b600080fd5b34801561017957600080fd5b5061018e600160a060020a0360043516610869565b005b34801561019c57600080fd5b5061018e6004356024356109ce565b3480156101b757600080fd5b506101cc600160a060020a03600435166109f4565b60408051918252519081900360200190f35b61018e600160a060020a0360043581169060243516604435610a1c565b34801561020757600080fd5b50610210610b4c565b6040805160ff9092168252519081900360200190f35b34801561023257600080fd5b5061023b610b56565b604051808660ff1660ff16815260200185815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102a8578181015183820152602001610290565b50505050905090810190601f1680156102d55780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b61018e600160a060020a0360043516610c22565b34801561030757600080fd5b5061018e6004803560ff1690602480359160443591606435600160a060020a031691608435918201910135610f2b565b34801561034357600080fd5b506101cc600160a060020a0360043516610f9c565b34801561036457600080fd5b5061018e60048035600160a060020a03169060248035908101910135610fb7565b34801561039157600080fd5b5061018e60ff600435166110c8565b3480156103ac57600080fd5b506103b5611131565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103f15781810151838201526020016103d9565b505050509050019250505060405180910390f35b34801561041157600080fd5b5061041a611193565b604051808b60ff1660ff1681526020018a63ffffffff1663ffffffff1681526020018981526020018860ff1660ff1681526020018715151515815260200186600160a060020a0316600160a060020a031681526020018581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156104b95781810151838201526020016104a1565b50505050905090810190601f1680156104e65780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610519578181015183820152602001610501565b50505050905090810190601f1680156105465780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561056a57600080fd5b50610210611320565b34801561057f57600080fd5b50610588611329565b6040805163ffffffff9092168252519081900360200190f35b3480156105ad57600080fd5b506105b661133a565b60408051600160a060020a039586168152938516602085015291841683830152909216606082015290519081900360800190f35b3480156105f657600080fd5b5061018e60ff60048035821691602480359260443515159263ffffffff60643516926084359091169160a43515159160c43580820192908101359160e435908101910135611368565b61018e61140d565b34801561065357600080fd5b5061065c611649565b604051808860ff1660ff168152602001871515151581526020018663ffffffff1663ffffffff1681526020018560ff1660ff1681526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156106d75781810151838201526020016106bf565b50505050905090810190601f1680156107045780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561073757818101518382015260200161071f565b50505050905090810190601f1680156107645780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561078557600080fd5b5061018e600160a060020a03600435811690602435811690604435166117b3565b3480156107b257600080fd5b5061018e600160a060020a0360043516602435611865565b3480156107d657600080fd5b506103b56118e1565b3480156107eb57600080fd5b506101cc600160a060020a0360043516611941565b34801561080c57600080fd5b5061018e600160a060020a036004351660243561195c565b34801561083057600080fd5b5061018e600160a060020a03600435166024356119b9565b34801561085457600080fd5b506101cc600160a060020a0360043516611adc565b600080548190819033600160a060020a0390811665010000000000909204161461089257600080fd5b600d546000935091505b8183101561097c57600e6000600d858154811015156108b757fe5b6000918252602080832090910154600160a060020a03168352820192909252604001812054600d8054919350600e91839190879081106108f357fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902055600d80548490811061092657fe5b6000918252602082200154604051600160a060020a039091169183156108fc02918491818181858888f19350505050158015610966573d6000803e3d6000fd5b506004805482900390556001929092019161089c565b6000546040805161010090920463ffffffff16825260046020830152805130600160a060020a039081169390881692600080516020611cee83398151915292918290030190a383600160a060020a0316ff5b60015433600160a060020a039081169116146109e957600080fd5b600a91909155600b55565b600160a060020a0316600090815260116020908152604080832054600e909252909120540390565b60025433600160a060020a03908116911614610a3757600080fd5b600160a060020a0383166000908152600e602052604090208054829003908190551515610a6757610a6783611af7565b600160a060020a0382166000908152600e60205260408120541115610aa957600160a060020a0382166000908152600e60205260409020805482019055610b11565b600160a060020a0382166000818152600e60205260408120839055600d805460018101825591527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501805473ffffffffffffffffffffffffffffffffffffffff191690911790555b604051600160a060020a038416903480156108fc02916000818181858888f19350505050158015610b46573d6000803e3d6000fd5b50505050565b60005460ff165b90565b60008054600a54600b54600c546007805460408051602060026101006001861615026000190190941693909304601f810184900484028201840190925281815288978897889760609760ff9093169691959094600160a060020a039093169391928391830182828015610c0a5780601f10610bdf57610100808354040283529160200191610c0a565b820191906000526020600020905b815481529060010190602001808311610bed57829003601f168201915b50505050509050945094509450945094509091929394565b6000805433600160a060020a03908116650100000000009092041614610c4757600080fd5b60005460ff16600114610c5957600080fd5b670de0b6b3a76400003410158015610c795750670de0b6b3a76400003406155b1515610c8457600080fd5b60055460045434011115610c9757600080fd5b34600454600554030390508060001480610cb95750670de0b6b3a76400008110155b1515610cc457600080fd5b60095460ff161515610d7f57600160a060020a0382166000908152600e60205260408120541115610d1257600160a060020a0382166000908152600e60205260409020805434019055610d7a565b600160a060020a0382166000818152600e60205260408120349055600d805460018101825591527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501805473ffffffffffffffffffffffffffffffffffffffff191690911790555b610e2e565b600160a060020a0382166000908152601060205260409020543414610da357600080fd5b600160a060020a0382166000908152600e602052604090205415610dc657600080fd5b600160a060020a0382166000818152600e60205260408120349055600d805460018101825591527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501805473ffffffffffffffffffffffffffffffffffffffff191690911790555b600480543401908190556005541415610ee0576000805460ff1916600217908190556040805163ffffffff610100909304929092168252600160208301528051600160a060020a033081169390861692600080516020611cee83398151915292918290030190a36000546040805161010090920463ffffffff16825260036020830152805130600160a060020a039081169390861692600080516020611cee83398151915292918290030190a3610f27565b6000546040805161010090920463ffffffff16825260016020830152805130600160a060020a039081169390861692600080516020611cee83398151915292918290030190a35b5050565b60015433600160a060020a03908116911614610f4657600080fd5b6000805460ff191660ff8816179055600a859055600b849055600c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038516179055610f9360078383611c2c565b50505050505050565b600160a060020a03166000908152600e602052604090205490565b60035433600160a060020a03908116911614610fd257600080fd5b60005460ff16600314610fe457600080fd5b600c54600160a060020a03161580159061100b5750600c54600160a060020a038481169116145b151561101657600080fd5b818160405180838380828437820191505092505050604051809103902060001916600760405180828054600181600116156101000203166002900480156110945780601f10611072576101008083540402835291820191611094565b820191906000526020600020905b815481529060010190602001808311611080575b50509150506040518091039020600019161415156110b157600080fd5b600a5415156110bf5742600a555b505042600b5550565b60015433600160a060020a039081169116146110e357600080fd5b6000805460ff191660ff838116919091179182905560408051929091168252517fbbb187c9c1fe36f650a38b0805b9e69063fc5c55dceca51340a6e9ae3a35779b916020908290030190a150565b6060600d80548060200260200160405190810160405280929190818152602001828054801561118957602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831161116b575b5050505050905090565b60008054600454600654600c54600a54600b54600780546040805160206002610100600186161581026000190190951604601f81018290048202830182019093528282528b9a8b9a8b9a8b9a8b9a8b9a8b9a60609a8b9a60ff808a169b9983900463ffffffff169a989981891699939098041696600160a060020a03909616956008929091849183018282801561126b5780601f106112405761010080835404028352916020019161126b565b820191906000526020600020905b81548152906001019060200180831161124e57829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156112f95780601f106112ce576101008083540402835291602001916112f9565b820191906000526020600020905b8154815290600101906020018083116112dc57829003601f168201915b50505050509050995099509950995099509950995099509950995090919293949596979899565b60065460ff1690565b600054610100900463ffffffff1690565b600054600154600254600354600160a060020a03650100000000009094048416949284169391821692911690565b60005433600160a060020a0390811665010000000000909204161461138c57600080fd5b6006805460058b9055600980548b151560ff19918216179091556000805460ff8b811663ffffffff8e1661010090810264ffffffff0019909416939093178516179092558915150261ff0019918f169290931691909117161790556113f360078585611c2c565b5061140060088383611c2c565b5050505050505050505050565b600354600090819060609081908390819033600160a060020a0390811691161461143657600080fd5b600d54604080518281526020808402820101909152349750909550858015611468578160200160208202803883390190505b50935084604051908082528060200260200182016040528015611495578160200160208202803883390190505b509250600091505b600d5482101561154e57600d8054839081106114b557fe5b6000918252602090912001548351600160a060020a03909116908490849081106114db57fe5b600160a060020a03909216602092830290910190910152600d8054600e916000918590811061150657fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902054845185908490811061153957fe5b6020908102909101015260019091019061149d565b600091505b82518210156115fa57825182600101141561156f575084611599565b600454848381518110151561158057fe5b90602001906020020151340281151561159557fe5b0490505b808603955082828151811015156115ac57fe5b90602001906020020151600160a060020a03166108fc829081150290604051600060405180830381858888f193505050501580156115ee573d6000803e3d6000fd5b50600190910190611553565b6000546040805161010090920463ffffffff16825234602083015280517fd05dd570a29015f1fdb157114eafc8f308499cec6a10ecb5b3e46bfc98c3c7dc9281900390910190a1505050505050565b60065460095460008054600454600780546040805160206002610100600186161581026000190190951604601f8101829004820283018201909352828252969889988998899860609889988b9860ff968716989587169790840463ffffffff16969093169490936008939185918301828280156117075780601f106116dc57610100808354040283529160200191611707565b820191906000526020600020905b8154815290600101906020018083116116ea57829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959850879450925084019050828280156117955780601f1061176a57610100808354040283529160200191611795565b820191906000526020600020905b81548152906001019060200180831161177857829003601f168201915b50505050509150965096509650965096509650965090919293949596565b60005433600160a060020a039081166501000000000090920416146117d757600080fd5b6000600160a060020a038416116117ed57600080fd5b6000600160a060020a0383161161180357600080fd5b6000600160a060020a0382161161181957600080fd5b60018054600160a060020a0394851673ffffffffffffffffffffffffffffffffffffffff1991821617909155600280549385169382169390931790925560038054919093169116179055565b60025433600160a060020a0390811691161461188057600080fd5b600160a060020a03821660009081526011602052604090205415156118bf57600160a060020a0382166000908152601160205260409020819055610f27565b600160a060020a03821660009081526011602052604090208054820190555050565b6060600f80548060200260200160405190810160405280929190818152602001828054801561118957602002820191906000526020600020908154600160a060020a0316815260019091019060200180831161116b575050505050905090565b600160a060020a031660009081526010602052604090205490565b60025433600160a060020a0390811691161461197757600080fd5b600160a060020a03821660009081526011602052604090208054829003908190551515610f275750600160a060020a0316600090815260116020526040812055565b60005433600160a060020a039081166501000000000090920416146119dd57600080fd5b60005460ff166001146119ef57600080fd5b600160a060020a0382166000908152600e602052604081205411611a1257600080fd5b600160a060020a0382166000908152600e60205260409020548114611a3657600080fd5b611a3f82611af7565b604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015611a75573d6000803e3d6000fd5b506004805482900390556000546040805161010090920463ffffffff16825260026020830152805130600160a060020a039081169390861692600080516020611cee83398151915292918290030190a36004541515610f27576000805460ff191690555050565b600160a060020a031660009081526011602052604090205490565b600d546000905b80821015611b4a5782600160a060020a0316600d83815481101515611b1f57fe5b600091825260209091200154600160a060020a03161415611b3f57611b4a565b600190910190611afe565b808210611b5357fe5b600182018114611bc457600d80546000198301908110611b6f57fe5b600091825260209091200154600d8054600160a060020a039092169184908110611b9557fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b600d80546000198301908110611bd657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055600d805490611c0f906000198301611caa565b505050600160a060020a03166000908152600e6020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c6d5782800160ff19823516178555611c9a565b82800160010185558215611c9a579182015b82811115611c9a578235825591602001919060010190611c7f565b50611ca6929150611cd3565b5090565b815481835581811115611cce57600083815260209020611cce918101908301611cd3565b505050565b610b5391905b80821115611ca65760008155600101611cd95600e2343d53ae3ed60cdff27b43bc04fb3bb73cfa592ecf22e7d210054594c734aaa165627a7a7230582007f77b16785217e971da86c73bf3a061af90eeb89dab81c9957fb7a525016cdf0029957cb6f8ab804a37503d6c794ebeb665a771ce85b8f8c8f8cc84317cc530b2cca165627a7a723058200dd8b8c8a83066ce91f2b80f8ee783381ff37ee0f2973927af445cbcd8e1e79e0029`

// DeployMNFactory deploys a new Ethereum contract, binding an instance of MNFactory to it.
func DeployMNFactory(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *MNFactory, error) {
	parsed, err := abi.JSON(strings.NewReader(MNFactoryABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MNFactoryBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &MNFactory{MNFactoryCaller: MNFactoryCaller{contract: contract}, MNFactoryTransactor: MNFactoryTransactor{contract: contract}, MNFactoryFilterer: MNFactoryFilterer{contract: contract}}, nil
}

// MNFactory is an auto generated Go binding around an Ethereum contract.
type MNFactory struct {
	MNFactoryCaller     // Read-only binding to the contract
	MNFactoryTransactor // Write-only binding to the contract
	MNFactoryFilterer   // Log filterer for contract events
}

// MNFactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type MNFactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNFactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type MNFactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNFactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type MNFactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNFactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type MNFactorySession struct {
	Contract     *MNFactory        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MNFactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type MNFactoryCallerSession struct {
	Contract *MNFactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// MNFactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type MNFactoryTransactorSession struct {
	Contract     *MNFactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// MNFactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type MNFactoryRaw struct {
	Contract *MNFactory // Generic contract binding to access the raw methods on
}

// MNFactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type MNFactoryCallerRaw struct {
	Contract *MNFactoryCaller // Generic read-only contract binding to access the raw methods on
}

// MNFactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type MNFactoryTransactorRaw struct {
	Contract *MNFactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMNFactory creates a new instance of MNFactory, bound to a specific deployed contract.
func NewMNFactory(address common.Address, backend bind.ContractBackend) (*MNFactory, error) {
	contract, err := bindMNFactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &MNFactory{MNFactoryCaller: MNFactoryCaller{contract: contract}, MNFactoryTransactor: MNFactoryTransactor{contract: contract}, MNFactoryFilterer: MNFactoryFilterer{contract: contract}}, nil
}

// NewMNFactoryCaller creates a new read-only instance of MNFactory, bound to a specific deployed contract.
func NewMNFactoryCaller(address common.Address, caller bind.ContractCaller) (*MNFactoryCaller, error) {
	contract, err := bindMNFactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MNFactoryCaller{contract: contract}, nil
}

// NewMNFactoryTransactor creates a new write-only instance of MNFactory, bound to a specific deployed contract.
func NewMNFactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*MNFactoryTransactor, error) {
	contract, err := bindMNFactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MNFactoryTransactor{contract: contract}, nil
}

// NewMNFactoryFilterer creates a new log filterer instance of MNFactory, bound to a specific deployed contract.
func NewMNFactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*MNFactoryFilterer, error) {
	contract, err := bindMNFactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MNFactoryFilterer{contract: contract}, nil
}

// bindMNFactory binds a generic wrapper to an already deployed contract.
func bindMNFactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MNFactoryABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MNFactory *MNFactoryRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MNFactory.Contract.MNFactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MNFactory *MNFactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MNFactory.Contract.MNFactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MNFactory *MNFactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MNFactory.Contract.MNFactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MNFactory *MNFactoryCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MNFactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MNFactory *MNFactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MNFactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MNFactory *MNFactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MNFactory.Contract.contract.Transact(opts, method, params...)
}

// GetActivatedNodeCount is a free data retrieval call binding the contract method 0xce46ae46.
//
// Solidity: function getActivatedNodeCount(_tier uint8) constant returns(_count uint16)
func (_MNFactory *MNFactoryCaller) GetActivatedNodeCount(opts *bind.CallOpts, _tier uint8) (uint16, error) {
	var (
		ret0 = new(uint16)
	)
	out := ret0
	err := _MNFactory.contract.Call(opts, out, "getActivatedNodeCount", _tier)
	return *ret0, err
}

// GetActivatedNodeCount is a free data retrieval call binding the contract method 0xce46ae46.
//
// Solidity: function getActivatedNodeCount(_tier uint8) constant returns(_count uint16)
func (_MNFactory *MNFactorySession) GetActivatedNodeCount(_tier uint8) (uint16, error) {
	return _MNFactory.Contract.GetActivatedNodeCount(&_MNFactory.CallOpts, _tier)
}

// GetActivatedNodeCount is a free data retrieval call binding the contract method 0xce46ae46.
//
// Solidity: function getActivatedNodeCount(_tier uint8) constant returns(_count uint16)
func (_MNFactory *MNFactoryCallerSession) GetActivatedNodeCount(_tier uint8) (uint16, error) {
	return _MNFactory.Contract.GetActivatedNodeCount(&_MNFactory.CallOpts, _tier)
}

// GetMNAddrByIndex is a free data retrieval call binding the contract method 0xc1599d2c.
//
// Solidity: function getMNAddrByIndex(_index uint256) constant returns(_mnAddr address)
func (_MNFactory *MNFactoryCaller) GetMNAddrByIndex(opts *bind.CallOpts, _index *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _MNFactory.contract.Call(opts, out, "getMNAddrByIndex", _index)
	return *ret0, err
}

// GetMNAddrByIndex is a free data retrieval call binding the contract method 0xc1599d2c.
//
// Solidity: function getMNAddrByIndex(_index uint256) constant returns(_mnAddr address)
func (_MNFactory *MNFactorySession) GetMNAddrByIndex(_index *big.Int) (common.Address, error) {
	return _MNFactory.Contract.GetMNAddrByIndex(&_MNFactory.CallOpts, _index)
}

// GetMNAddrByIndex is a free data retrieval call binding the contract method 0xc1599d2c.
//
// Solidity: function getMNAddrByIndex(_index uint256) constant returns(_mnAddr address)
func (_MNFactory *MNFactoryCallerSession) GetMNAddrByIndex(_index *big.Int) (common.Address, error) {
	return _MNFactory.Contract.GetMNAddrByIndex(&_MNFactory.CallOpts, _index)
}

// GetMNCount is a free data retrieval call binding the contract method 0x7a0582b9.
//
// Solidity: function getMNCount() constant returns(_count uint256)
func (_MNFactory *MNFactoryCaller) GetMNCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MNFactory.contract.Call(opts, out, "getMNCount")
	return *ret0, err
}

// GetMNCount is a free data retrieval call binding the contract method 0x7a0582b9.
//
// Solidity: function getMNCount() constant returns(_count uint256)
func (_MNFactory *MNFactorySession) GetMNCount() (*big.Int, error) {
	return _MNFactory.Contract.GetMNCount(&_MNFactory.CallOpts)
}

// GetMNCount is a free data retrieval call binding the contract method 0x7a0582b9.
//
// Solidity: function getMNCount() constant returns(_count uint256)
func (_MNFactory *MNFactoryCallerSession) GetMNCount() (*big.Int, error) {
	return _MNFactory.Contract.GetMNCount(&_MNFactory.CallOpts)
}

// GetNodeCount is a free data retrieval call binding the contract method 0x993ed2a5.
//
// Solidity: function getNodeCount(_tier uint8) constant returns(_count uint16)
func (_MNFactory *MNFactoryCaller) GetNodeCount(opts *bind.CallOpts, _tier uint8) (uint16, error) {
	var (
		ret0 = new(uint16)
	)
	out := ret0
	err := _MNFactory.contract.Call(opts, out, "getNodeCount", _tier)
	return *ret0, err
}

// GetNodeCount is a free data retrieval call binding the contract method 0x993ed2a5.
//
// Solidity: function getNodeCount(_tier uint8) constant returns(_count uint16)
func (_MNFactory *MNFactorySession) GetNodeCount(_tier uint8) (uint16, error) {
	return _MNFactory.Contract.GetNodeCount(&_MNFactory.CallOpts, _tier)
}

// GetNodeCount is a free data retrieval call binding the contract method 0x993ed2a5.
//
// Solidity: function getNodeCount(_tier uint8) constant returns(_count uint16)
func (_MNFactory *MNFactoryCallerSession) GetNodeCount(_tier uint8) (uint16, error) {
	return _MNFactory.Contract.GetNodeCount(&_MNFactory.CallOpts, _tier)
}

// GetNodeList is a free data retrieval call binding the contract method 0x53f3b713.
//
// Solidity: function getNodeList() constant returns(_node_list address[])
func (_MNFactory *MNFactoryCaller) GetNodeList(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _MNFactory.contract.Call(opts, out, "getNodeList")
	return *ret0, err
}

// GetNodeList is a free data retrieval call binding the contract method 0x53f3b713.
//
// Solidity: function getNodeList() constant returns(_node_list address[])
func (_MNFactory *MNFactorySession) GetNodeList() ([]common.Address, error) {
	return _MNFactory.Contract.GetNodeList(&_MNFactory.CallOpts)
}

// GetNodeList is a free data retrieval call binding the contract method 0x53f3b713.
//
// Solidity: function getNodeList() constant returns(_node_list address[])
func (_MNFactory *MNFactoryCallerSession) GetNodeList() ([]common.Address, error) {
	return _MNFactory.Contract.GetNodeList(&_MNFactory.CallOpts)
}

// GetNodeSumInfo is a free data retrieval call binding the contract method 0x656ff376.
//
// Solidity: function getNodeSumInfo(_nodeAddr address) constant returns(_id uint32, _tier uint8, _state uint8, _is_private bool)
func (_MNFactory *MNFactoryCaller) GetNodeSumInfo(opts *bind.CallOpts, _nodeAddr common.Address) (struct {
	Id         uint32
	Tier       uint8
	State      uint8
	Is_private bool
}, error) {
	ret := new(struct {
		Id         uint32
		Tier       uint8
		State      uint8
		Is_private bool
	})
	out := ret
	err := _MNFactory.contract.Call(opts, out, "getNodeSumInfo", _nodeAddr)
	return *ret, err
}

// GetNodeSumInfo is a free data retrieval call binding the contract method 0x656ff376.
//
// Solidity: function getNodeSumInfo(_nodeAddr address) constant returns(_id uint32, _tier uint8, _state uint8, _is_private bool)
func (_MNFactory *MNFactorySession) GetNodeSumInfo(_nodeAddr common.Address) (struct {
	Id         uint32
	Tier       uint8
	State      uint8
	Is_private bool
}, error) {
	return _MNFactory.Contract.GetNodeSumInfo(&_MNFactory.CallOpts, _nodeAddr)
}

// GetNodeSumInfo is a free data retrieval call binding the contract method 0x656ff376.
//
// Solidity: function getNodeSumInfo(_nodeAddr address) constant returns(_id uint32, _tier uint8, _state uint8, _is_private bool)
func (_MNFactory *MNFactoryCallerSession) GetNodeSumInfo(_nodeAddr common.Address) (struct {
	Id         uint32
	Tier       uint8
	State      uint8
	Is_private bool
}, error) {
	return _MNFactory.Contract.GetNodeSumInfo(&_MNFactory.CallOpts, _nodeAddr)
}

// AdminDestroyMN is a paid mutator transaction binding the contract method 0xc51fc5a7.
//
// Solidity: function adminDestroyMN(destroyer address, _nodeAddr address) returns()
func (_MNFactory *MNFactoryTransactor) AdminDestroyMN(opts *bind.TransactOpts, destroyer common.Address, _nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "adminDestroyMN", destroyer, _nodeAddr)
}

// AdminDestroyMN is a paid mutator transaction binding the contract method 0xc51fc5a7.
//
// Solidity: function adminDestroyMN(destroyer address, _nodeAddr address) returns()
func (_MNFactory *MNFactorySession) AdminDestroyMN(destroyer common.Address, _nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.AdminDestroyMN(&_MNFactory.TransactOpts, destroyer, _nodeAddr)
}

// AdminDestroyMN is a paid mutator transaction binding the contract method 0xc51fc5a7.
//
// Solidity: function adminDestroyMN(destroyer address, _nodeAddr address) returns()
func (_MNFactory *MNFactoryTransactorSession) AdminDestroyMN(destroyer common.Address, _nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.AdminDestroyMN(&_MNFactory.TransactOpts, destroyer, _nodeAddr)
}

// AdminRemoveMN is a paid mutator transaction binding the contract method 0xee7fd756.
//
// Solidity: function adminRemoveMN(_nodeAddr address) returns()
func (_MNFactory *MNFactoryTransactor) AdminRemoveMN(opts *bind.TransactOpts, _nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "adminRemoveMN", _nodeAddr)
}

// AdminRemoveMN is a paid mutator transaction binding the contract method 0xee7fd756.
//
// Solidity: function adminRemoveMN(_nodeAddr address) returns()
func (_MNFactory *MNFactorySession) AdminRemoveMN(_nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.AdminRemoveMN(&_MNFactory.TransactOpts, _nodeAddr)
}

// AdminRemoveMN is a paid mutator transaction binding the contract method 0xee7fd756.
//
// Solidity: function adminRemoveMN(_nodeAddr address) returns()
func (_MNFactory *MNFactoryTransactorSession) AdminRemoveMN(_nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.AdminRemoveMN(&_MNFactory.TransactOpts, _nodeAddr)
}

// IncreaseActivatedCount is a paid mutator transaction binding the contract method 0x2fbb92b1.
//
// Solidity: function increaseActivatedCount(_tier uint8) returns()
func (_MNFactory *MNFactoryTransactor) IncreaseActivatedCount(opts *bind.TransactOpts, _tier uint8) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "increaseActivatedCount", _tier)
}

// IncreaseActivatedCount is a paid mutator transaction binding the contract method 0x2fbb92b1.
//
// Solidity: function increaseActivatedCount(_tier uint8) returns()
func (_MNFactory *MNFactorySession) IncreaseActivatedCount(_tier uint8) (*types.Transaction, error) {
	return _MNFactory.Contract.IncreaseActivatedCount(&_MNFactory.TransactOpts, _tier)
}

// IncreaseActivatedCount is a paid mutator transaction binding the contract method 0x2fbb92b1.
//
// Solidity: function increaseActivatedCount(_tier uint8) returns()
func (_MNFactory *MNFactoryTransactorSession) IncreaseActivatedCount(_tier uint8) (*types.Transaction, error) {
	return _MNFactory.Contract.IncreaseActivatedCount(&_MNFactory.TransactOpts, _tier)
}

// InitializeMN is a paid mutator transaction binding the contract method 0xae75bf5e.
//
// Solidity: function initializeMN(_tier uint8, _is_private bool, _is_halo_hosting bool, _alias string, _ipv4_address string, _other_owners address[], _other_shares uint256[]) returns()
func (_MNFactory *MNFactoryTransactor) InitializeMN(opts *bind.TransactOpts, _tier uint8, _is_private bool, _is_halo_hosting bool, _alias string, _ipv4_address string, _other_owners []common.Address, _other_shares []*big.Int) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "initializeMN", _tier, _is_private, _is_halo_hosting, _alias, _ipv4_address, _other_owners, _other_shares)
}

// InitializeMN is a paid mutator transaction binding the contract method 0xae75bf5e.
//
// Solidity: function initializeMN(_tier uint8, _is_private bool, _is_halo_hosting bool, _alias string, _ipv4_address string, _other_owners address[], _other_shares uint256[]) returns()
func (_MNFactory *MNFactorySession) InitializeMN(_tier uint8, _is_private bool, _is_halo_hosting bool, _alias string, _ipv4_address string, _other_owners []common.Address, _other_shares []*big.Int) (*types.Transaction, error) {
	return _MNFactory.Contract.InitializeMN(&_MNFactory.TransactOpts, _tier, _is_private, _is_halo_hosting, _alias, _ipv4_address, _other_owners, _other_shares)
}

// InitializeMN is a paid mutator transaction binding the contract method 0xae75bf5e.
//
// Solidity: function initializeMN(_tier uint8, _is_private bool, _is_halo_hosting bool, _alias string, _ipv4_address string, _other_owners address[], _other_shares uint256[]) returns()
func (_MNFactory *MNFactoryTransactorSession) InitializeMN(_tier uint8, _is_private bool, _is_halo_hosting bool, _alias string, _ipv4_address string, _other_owners []common.Address, _other_shares []*big.Int) (*types.Transaction, error) {
	return _MNFactory.Contract.InitializeMN(&_MNFactory.TransactOpts, _tier, _is_private, _is_halo_hosting, _alias, _ipv4_address, _other_owners, _other_shares)
}

// JoinToInitializedMN is a paid mutator transaction binding the contract method 0x726c4d6f.
//
// Solidity: function joinToInitializedMN(_nodeAddr address) returns()
func (_MNFactory *MNFactoryTransactor) JoinToInitializedMN(opts *bind.TransactOpts, _nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "joinToInitializedMN", _nodeAddr)
}

// JoinToInitializedMN is a paid mutator transaction binding the contract method 0x726c4d6f.
//
// Solidity: function joinToInitializedMN(_nodeAddr address) returns()
func (_MNFactory *MNFactorySession) JoinToInitializedMN(_nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.JoinToInitializedMN(&_MNFactory.TransactOpts, _nodeAddr)
}

// JoinToInitializedMN is a paid mutator transaction binding the contract method 0x726c4d6f.
//
// Solidity: function joinToInitializedMN(_nodeAddr address) returns()
func (_MNFactory *MNFactoryTransactorSession) JoinToInitializedMN(_nodeAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.JoinToInitializedMN(&_MNFactory.TransactOpts, _nodeAddr)
}

// SetMNAdminAddr is a paid mutator transaction binding the contract method 0x0029185b.
//
// Solidity: function setMNAdminAddr(_mnAdminAddr address) returns()
func (_MNFactory *MNFactoryTransactor) SetMNAdminAddr(opts *bind.TransactOpts, _mnAdminAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "setMNAdminAddr", _mnAdminAddr)
}

// SetMNAdminAddr is a paid mutator transaction binding the contract method 0x0029185b.
//
// Solidity: function setMNAdminAddr(_mnAdminAddr address) returns()
func (_MNFactory *MNFactorySession) SetMNAdminAddr(_mnAdminAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.SetMNAdminAddr(&_MNFactory.TransactOpts, _mnAdminAddr)
}

// SetMNAdminAddr is a paid mutator transaction binding the contract method 0x0029185b.
//
// Solidity: function setMNAdminAddr(_mnAdminAddr address) returns()
func (_MNFactory *MNFactoryTransactorSession) SetMNAdminAddr(_mnAdminAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.SetMNAdminAddr(&_MNFactory.TransactOpts, _mnAdminAddr)
}

// SetMNMarketplaceAddr is a paid mutator transaction binding the contract method 0x61443a5f.
//
// Solidity: function setMNMarketplaceAddr(_mnMarketplaceAddr address) returns()
func (_MNFactory *MNFactoryTransactor) SetMNMarketplaceAddr(opts *bind.TransactOpts, _mnMarketplaceAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "setMNMarketplaceAddr", _mnMarketplaceAddr)
}

// SetMNMarketplaceAddr is a paid mutator transaction binding the contract method 0x61443a5f.
//
// Solidity: function setMNMarketplaceAddr(_mnMarketplaceAddr address) returns()
func (_MNFactory *MNFactorySession) SetMNMarketplaceAddr(_mnMarketplaceAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.SetMNMarketplaceAddr(&_MNFactory.TransactOpts, _mnMarketplaceAddr)
}

// SetMNMarketplaceAddr is a paid mutator transaction binding the contract method 0x61443a5f.
//
// Solidity: function setMNMarketplaceAddr(_mnMarketplaceAddr address) returns()
func (_MNFactory *MNFactoryTransactorSession) SetMNMarketplaceAddr(_mnMarketplaceAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.SetMNMarketplaceAddr(&_MNFactory.TransactOpts, _mnMarketplaceAddr)
}

// SetMNRewardAddr is a paid mutator transaction binding the contract method 0x04e27777.
//
// Solidity: function setMNRewardAddr(_mnRewardAddr address) returns()
func (_MNFactory *MNFactoryTransactor) SetMNRewardAddr(opts *bind.TransactOpts, _mnRewardAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "setMNRewardAddr", _mnRewardAddr)
}

// SetMNRewardAddr is a paid mutator transaction binding the contract method 0x04e27777.
//
// Solidity: function setMNRewardAddr(_mnRewardAddr address) returns()
func (_MNFactory *MNFactorySession) SetMNRewardAddr(_mnRewardAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.SetMNRewardAddr(&_MNFactory.TransactOpts, _mnRewardAddr)
}

// SetMNRewardAddr is a paid mutator transaction binding the contract method 0x04e27777.
//
// Solidity: function setMNRewardAddr(_mnRewardAddr address) returns()
func (_MNFactory *MNFactoryTransactorSession) SetMNRewardAddr(_mnRewardAddr common.Address) (*types.Transaction, error) {
	return _MNFactory.Contract.SetMNRewardAddr(&_MNFactory.TransactOpts, _mnRewardAddr)
}

// WithdrawFromInitializedMN is a paid mutator transaction binding the contract method 0x13a30791.
//
// Solidity: function withdrawFromInitializedMN(_nodeAddr address, _withdrawValue uint256) returns()
func (_MNFactory *MNFactoryTransactor) WithdrawFromInitializedMN(opts *bind.TransactOpts, _nodeAddr common.Address, _withdrawValue *big.Int) (*types.Transaction, error) {
	return _MNFactory.contract.Transact(opts, "withdrawFromInitializedMN", _nodeAddr, _withdrawValue)
}

// WithdrawFromInitializedMN is a paid mutator transaction binding the contract method 0x13a30791.
//
// Solidity: function withdrawFromInitializedMN(_nodeAddr address, _withdrawValue uint256) returns()
func (_MNFactory *MNFactorySession) WithdrawFromInitializedMN(_nodeAddr common.Address, _withdrawValue *big.Int) (*types.Transaction, error) {
	return _MNFactory.Contract.WithdrawFromInitializedMN(&_MNFactory.TransactOpts, _nodeAddr, _withdrawValue)
}

// WithdrawFromInitializedMN is a paid mutator transaction binding the contract method 0x13a30791.
//
// Solidity: function withdrawFromInitializedMN(_nodeAddr address, _withdrawValue uint256) returns()
func (_MNFactory *MNFactoryTransactorSession) WithdrawFromInitializedMN(_nodeAddr common.Address, _withdrawValue *big.Int) (*types.Transaction, error) {
	return _MNFactory.Contract.WithdrawFromInitializedMN(&_MNFactory.TransactOpts, _nodeAddr, _withdrawValue)
}

// MNFactoryEvent_MNFactoryIterator is returned from FilterEvent_MNFactory and is used to iterate over the raw logs and unpacked data for Event_MNFactory events raised by the MNFactory contract.
type MNFactoryEvent_MNFactoryIterator struct {
	Event *MNFactoryEvent_MNFactory // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MNFactoryEvent_MNFactoryIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MNFactoryEvent_MNFactory)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MNFactoryEvent_MNFactory)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MNFactoryEvent_MNFactoryIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MNFactoryEvent_MNFactoryIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MNFactoryEvent_MNFactory represents a Event_MNFactory event raised by the MNFactory contract.
type MNFactoryEvent_MNFactory struct {
	NodeAddr  common.Address
	NodeId    uint32
	EventType uint8
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterEvent_MNFactory is a free log retrieval operation binding the contract event 0x957cb6f8ab804a37503d6c794ebeb665a771ce85b8f8c8f8cc84317cc530b2cc.
//
// Solidity: event Event_MNFactory(_nodeAddr indexed address, _nodeId uint32, _eventType uint8)
func (_MNFactory *MNFactoryFilterer) FilterEvent_MNFactory(opts *bind.FilterOpts, _nodeAddr []common.Address) (*MNFactoryEvent_MNFactoryIterator, error) {

	var _nodeAddrRule []interface{}
	for _, _nodeAddrItem := range _nodeAddr {
		_nodeAddrRule = append(_nodeAddrRule, _nodeAddrItem)
	}

	logs, sub, err := _MNFactory.contract.FilterLogs(opts, "Event_MNFactory", _nodeAddrRule)
	if err != nil {
		return nil, err
	}
	return &MNFactoryEvent_MNFactoryIterator{contract: _MNFactory.contract, event: "Event_MNFactory", logs: logs, sub: sub}, nil
}

// WatchEvent_MNFactory is a free log subscription operation binding the contract event 0x957cb6f8ab804a37503d6c794ebeb665a771ce85b8f8c8f8cc84317cc530b2cc.
//
// Solidity: event Event_MNFactory(_nodeAddr indexed address, _nodeId uint32, _eventType uint8)
func (_MNFactory *MNFactoryFilterer) WatchEvent_MNFactory(opts *bind.WatchOpts, sink chan<- *MNFactoryEvent_MNFactory, _nodeAddr []common.Address) (event.Subscription, error) {

	var _nodeAddrRule []interface{}
	for _, _nodeAddrItem := range _nodeAddr {
		_nodeAddrRule = append(_nodeAddrRule, _nodeAddrItem)
	}

	logs, sub, err := _MNFactory.contract.WatchLogs(opts, "Event_MNFactory", _nodeAddrRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MNFactoryEvent_MNFactory)
				if err := _MNFactory.contract.UnpackLog(event, "Event_MNFactory", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// MNInstanceABI is the input ABI used to generate the binding from.
const MNInstanceABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"withdrawer\",\"type\":\"address\"}],\"name\":\"destroy\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_firstPing\",\"type\":\"uint256\"},{\"name\":\"_lastPing\",\"type\":\"uint256\"}],\"name\":\"setPing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"name\":\"getShareUnlocked\",\"outputs\":[{\"name\":\"_ownerShareUnlocked\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"seller\",\"type\":\"address\"},{\"name\":\"buyer\",\"type\":\"address\"},{\"name\":\"_shareSold\",\"type\":\"uint256\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getState\",\"outputs\":[{\"name\":\"_state\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAdvancedInfo\",\"outputs\":[{\"name\":\"_state\",\"type\":\"uint8\"},{\"name\":\"_firstPing\",\"type\":\"uint256\"},{\"name\":\"_lastPing\",\"type\":\"uint256\"},{\"name\":\"_pingClient\",\"type\":\"address\"},{\"name\":\"_ipv4Address\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_joiner\",\"type\":\"address\"}],\"name\":\"join\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_state\",\"type\":\"uint8\"},{\"name\":\"_firstPing\",\"type\":\"uint256\"},{\"name\":\"_lastPing\",\"type\":\"uint256\"},{\"name\":\"_pingClient\",\"type\":\"address\"},{\"name\":\"_ipv4Address\",\"type\":\"string\"}],\"name\":\"setAdvancedInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"name\":\"getOwnerShare\",\"outputs\":[{\"name\":\"_ownerShare\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_joinerAddress\",\"type\":\"address\"}],\"name\":\"getJoinerShare\",\"outputs\":[{\"name\":\"_joiner_share\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_pinger\",\"type\":\"address\"},{\"name\":\"_ipv4Address\",\"type\":\"string\"}],\"name\":\"doPing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"setState\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnerList\",\"outputs\":[{\"name\":\"_ownerList\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInfo\",\"outputs\":[{\"name\":\"_state\",\"type\":\"uint8\"},{\"name\":\"_node_id\",\"type\":\"uint32\"},{\"name\":\"_total_deposit\",\"type\":\"uint256\"},{\"name\":\"_tier\",\"type\":\"uint8\"},{\"name\":\"_is_halo_hosting\",\"type\":\"bool\"},{\"name\":\"_ping_client\",\"type\":\"address\"},{\"name\":\"_first_ping\",\"type\":\"uint256\"},{\"name\":\"_last_ping\",\"type\":\"uint256\"},{\"name\":\"_ipv4_address\",\"type\":\"string\"},{\"name\":\"_alias\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTier\",\"outputs\":[{\"name\":\"_tier\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getId\",\"outputs\":[{\"name\":\"_id\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSecurityAddrs\",\"outputs\":[{\"name\":\"_factory\",\"type\":\"address\"},{\"name\":\"_admin\",\"type\":\"address\"},{\"name\":\"marketplace\",\"type\":\"address\"},{\"name\":\"reward\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_tier\",\"type\":\"uint8\"},{\"name\":\"_tierPrice\",\"type\":\"uint256\"},{\"name\":\"_isPrivate\",\"type\":\"bool\"},{\"name\":\"_proposedId\",\"type\":\"uint32\"},{\"name\":\"_state\",\"type\":\"uint8\"},{\"name\":\"_isHaloHosting\",\"type\":\"bool\"},{\"name\":\"_ipv4Address\",\"type\":\"string\"},{\"name\":\"_alias\",\"type\":\"string\"}],\"name\":\"setBasicInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"distributeReward\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBasicInfo\",\"outputs\":[{\"name\":\"_tier\",\"type\":\"uint8\"},{\"name\":\"_isPrivate\",\"type\":\"bool\"},{\"name\":\"_proposedId\",\"type\":\"uint32\"},{\"name\":\"_state\",\"type\":\"uint8\"},{\"name\":\"_ipv4Address\",\"type\":\"string\"},{\"name\":\"_alias\",\"type\":\"string\"},{\"name\":\"_total_deposit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getJoinerList\",\"outputs\":[{\"name\":\"_joiner_list\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_mnAdmin\",\"type\":\"address\"},{\"name\":\"_mnMarketplace\",\"type\":\"address\"},{\"name\":\"_mnReward\",\"type\":\"address\"}],\"name\":\"setSecurityAddrs\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ownerAddress\",\"type\":\"address\"},{\"name\":\"_shareToBeLocked\",\"type\":\"uint256\"}],\"name\":\"lockShare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getPrivateList\",\"outputs\":[{\"name\":\"_joiner_list\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_joinerAddress\",\"type\":\"address\"}],\"name\":\"getPrivateShare\",\"outputs\":[{\"name\":\"_joiner_share\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_ownerAddress\",\"type\":\"address\"},{\"name\":\"_shareToBeUnlocked\",\"type\":\"uint256\"}],\"name\":\"unlockShare\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"withdrawer\",\"type\":\"address\"},{\"name\":\"_withdrawValue\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"name\":\"getShareLocked\",\"outputs\":[{\"name\":\"_ownerShareLocked\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_factoryAddr\",\"type\":\"address\"},{\"name\":\"_firstJoiner\",\"type\":\"address\"},{\"name\":\"_otherJoiners\",\"type\":\"address[]\"},{\"name\":\"_otherShares\",\"type\":\"uint256[]\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_joinerAddr\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_nodeAddr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_nodeId\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"_eventType\",\"type\":\"uint8\"}],\"name\":\"Event_Action\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"Event_AdminChangeState\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_nodeId\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Event_Reward\",\"type\":\"event\"}]"

// MNInstanceBin is the compiled bytecode used for deploying new contracts.
const MNInstanceBin = `0x608060405260405162001ee438038062001ee4833981016040908152815160208084015183850151606086015160008054600160a060020a0380881665010000000000027fffffffffffffff0000000000000000000000000000000000000000ffffffffff909216919091178255346004819055908516808352600e90965296812096909655600d80546001810182559087527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5018054600160a060020a031916909417909355850180519395919490939290910191811080156100e4575082518251145b15610196575060005b825181101561019657600f838281518110151561010657fe5b6020908102919091018101518254600181018455600093845291909220018054600160a060020a031916600160a060020a03909216919091179055815182908290811061014f57fe5b9060200190602002015160106000858481518110151561016b57fe5b6020908102909101810151600160a060020a03168252810191909152604001600020556001016100ed565b5050505050611d3980620001ab6000396000f3006080604052600436106101685763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041662f55d9d811461016d57806302207294146101905780630f6a134f146101ab578063171c00fd146101de5780631865c57d146101fb5780631fdfb43e1461022657806328ffe6c8146102e7578063310e6e3a146102fb5780633268e7bc14610337578063393c8fa814610337578063448115851461035857806356de96db1461038557806358100370146103a05780635a9b0b89146104055780635ad701c21461055e5780635d1ca631146105735780637117c4a7146105a15780638473a590146105ea5780638f73c5ae1461063f5780639f999da314610647578063b326e9fd146103a0578063be854c1d14610779578063c8b04290146107a6578063ce88de60146107ca578063e236a397146107df578063f096ca8b14610800578063f3fef3a314610824578063fbe7db8514610848575b600080fd5b34801561017957600080fd5b5061018e600160a060020a0360043516610869565b005b34801561019c57600080fd5b5061018e6004356024356109ce565b3480156101b757600080fd5b506101cc600160a060020a03600435166109f4565b60408051918252519081900360200190f35b61018e600160a060020a0360043581169060243516604435610a1c565b34801561020757600080fd5b50610210610b4c565b6040805160ff9092168252519081900360200190f35b34801561023257600080fd5b5061023b610b56565b604051808660ff1660ff16815260200185815260200184815260200183600160a060020a0316600160a060020a0316815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102a8578181015183820152602001610290565b50505050905090810190601f1680156102d55780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b61018e600160a060020a0360043516610c22565b34801561030757600080fd5b5061018e6004803560ff1690602480359160443591606435600160a060020a031691608435918201910135610f2b565b34801561034357600080fd5b506101cc600160a060020a0360043516610f9c565b34801561036457600080fd5b5061018e60048035600160a060020a03169060248035908101910135610fb7565b34801561039157600080fd5b5061018e60ff600435166110c8565b3480156103ac57600080fd5b506103b5611131565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156103f15781810151838201526020016103d9565b505050509050019250505060405180910390f35b34801561041157600080fd5b5061041a611193565b604051808b60ff1660ff1681526020018a63ffffffff1663ffffffff1681526020018981526020018860ff1660ff1681526020018715151515815260200186600160a060020a0316600160a060020a031681526020018581526020018481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156104b95781810151838201526020016104a1565b50505050905090810190601f1680156104e65780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b83811015610519578181015183820152602001610501565b50505050905090810190601f1680156105465780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561056a57600080fd5b50610210611320565b34801561057f57600080fd5b50610588611329565b6040805163ffffffff9092168252519081900360200190f35b3480156105ad57600080fd5b506105b661133a565b60408051600160a060020a039586168152938516602085015291841683830152909216606082015290519081900360800190f35b3480156105f657600080fd5b5061018e60ff60048035821691602480359260443515159263ffffffff60643516926084359091169160a43515159160c43580820192908101359160e435908101910135611368565b61018e61140d565b34801561065357600080fd5b5061065c611649565b604051808860ff1660ff168152602001871515151581526020018663ffffffff1663ffffffff1681526020018560ff1660ff1681526020018060200180602001848152602001838103835286818151815260200191508051906020019080838360005b838110156106d75781810151838201526020016106bf565b50505050905090810190601f1680156107045780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561073757818101518382015260200161071f565b50505050905090810190601f1680156107645780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b34801561078557600080fd5b5061018e600160a060020a03600435811690602435811690604435166117b3565b3480156107b257600080fd5b5061018e600160a060020a0360043516602435611865565b3480156107d657600080fd5b506103b56118e1565b3480156107eb57600080fd5b506101cc600160a060020a0360043516611941565b34801561080c57600080fd5b5061018e600160a060020a036004351660243561195c565b34801561083057600080fd5b5061018e600160a060020a03600435166024356119b9565b34801561085457600080fd5b506101cc600160a060020a0360043516611adc565b600080548190819033600160a060020a0390811665010000000000909204161461089257600080fd5b600d546000935091505b8183101561097c57600e6000600d858154811015156108b757fe5b6000918252602080832090910154600160a060020a03168352820192909252604001812054600d8054919350600e91839190879081106108f357fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902055600d80548490811061092657fe5b6000918252602082200154604051600160a060020a039091169183156108fc02918491818181858888f19350505050158015610966573d6000803e3d6000fd5b506004805482900390556001929092019161089c565b6000546040805161010090920463ffffffff16825260046020830152805130600160a060020a039081169390881692600080516020611cee83398151915292918290030190a383600160a060020a0316ff5b60015433600160a060020a039081169116146109e957600080fd5b600a91909155600b55565b600160a060020a0316600090815260116020908152604080832054600e909252909120540390565b60025433600160a060020a03908116911614610a3757600080fd5b600160a060020a0383166000908152600e602052604090208054829003908190551515610a6757610a6783611af7565b600160a060020a0382166000908152600e60205260408120541115610aa957600160a060020a0382166000908152600e60205260409020805482019055610b11565b600160a060020a0382166000818152600e60205260408120839055600d805460018101825591527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501805473ffffffffffffffffffffffffffffffffffffffff191690911790555b604051600160a060020a038416903480156108fc02916000818181858888f19350505050158015610b46573d6000803e3d6000fd5b50505050565b60005460ff165b90565b60008054600a54600b54600c546007805460408051602060026101006001861615026000190190941693909304601f810184900484028201840190925281815288978897889760609760ff9093169691959094600160a060020a039093169391928391830182828015610c0a5780601f10610bdf57610100808354040283529160200191610c0a565b820191906000526020600020905b815481529060010190602001808311610bed57829003601f168201915b50505050509050945094509450945094509091929394565b6000805433600160a060020a03908116650100000000009092041614610c4757600080fd5b60005460ff16600114610c5957600080fd5b670de0b6b3a76400003410158015610c795750670de0b6b3a76400003406155b1515610c8457600080fd5b60055460045434011115610c9757600080fd5b34600454600554030390508060001480610cb95750670de0b6b3a76400008110155b1515610cc457600080fd5b60095460ff161515610d7f57600160a060020a0382166000908152600e60205260408120541115610d1257600160a060020a0382166000908152600e60205260409020805434019055610d7a565b600160a060020a0382166000818152600e60205260408120349055600d805460018101825591527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501805473ffffffffffffffffffffffffffffffffffffffff191690911790555b610e2e565b600160a060020a0382166000908152601060205260409020543414610da357600080fd5b600160a060020a0382166000908152600e602052604090205415610dc657600080fd5b600160a060020a0382166000818152600e60205260408120349055600d805460018101825591527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501805473ffffffffffffffffffffffffffffffffffffffff191690911790555b600480543401908190556005541415610ee0576000805460ff1916600217908190556040805163ffffffff610100909304929092168252600160208301528051600160a060020a033081169390861692600080516020611cee83398151915292918290030190a36000546040805161010090920463ffffffff16825260036020830152805130600160a060020a039081169390861692600080516020611cee83398151915292918290030190a3610f27565b6000546040805161010090920463ffffffff16825260016020830152805130600160a060020a039081169390861692600080516020611cee83398151915292918290030190a35b5050565b60015433600160a060020a03908116911614610f4657600080fd5b6000805460ff191660ff8816179055600a859055600b849055600c805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038516179055610f9360078383611c2c565b50505050505050565b600160a060020a03166000908152600e602052604090205490565b60035433600160a060020a03908116911614610fd257600080fd5b60005460ff16600314610fe457600080fd5b600c54600160a060020a03161580159061100b5750600c54600160a060020a038481169116145b151561101657600080fd5b818160405180838380828437820191505092505050604051809103902060001916600760405180828054600181600116156101000203166002900480156110945780601f10611072576101008083540402835291820191611094565b820191906000526020600020905b815481529060010190602001808311611080575b50509150506040518091039020600019161415156110b157600080fd5b600a5415156110bf5742600a555b505042600b5550565b60015433600160a060020a039081169116146110e357600080fd5b6000805460ff191660ff838116919091179182905560408051929091168252517fbbb187c9c1fe36f650a38b0805b9e69063fc5c55dceca51340a6e9ae3a35779b916020908290030190a150565b6060600d80548060200260200160405190810160405280929190818152602001828054801561118957602002820191906000526020600020905b8154600160a060020a0316815260019091019060200180831161116b575b5050505050905090565b60008054600454600654600c54600a54600b54600780546040805160206002610100600186161581026000190190951604601f81018290048202830182019093528282528b9a8b9a8b9a8b9a8b9a8b9a8b9a60609a8b9a60ff808a169b9983900463ffffffff169a989981891699939098041696600160a060020a03909616956008929091849183018282801561126b5780601f106112405761010080835404028352916020019161126b565b820191906000526020600020905b81548152906001019060200180831161124e57829003601f168201915b5050845460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959750869450925084019050828280156112f95780601f106112ce576101008083540402835291602001916112f9565b820191906000526020600020905b8154815290600101906020018083116112dc57829003601f168201915b50505050509050995099509950995099509950995099509950995090919293949596979899565b60065460ff1690565b600054610100900463ffffffff1690565b600054600154600254600354600160a060020a03650100000000009094048416949284169391821692911690565b60005433600160a060020a0390811665010000000000909204161461138c57600080fd5b6006805460058b9055600980548b151560ff19918216179091556000805460ff8b811663ffffffff8e1661010090810264ffffffff0019909416939093178516179092558915150261ff0019918f169290931691909117161790556113f360078585611c2c565b5061140060088383611c2c565b5050505050505050505050565b600354600090819060609081908390819033600160a060020a0390811691161461143657600080fd5b600d54604080518281526020808402820101909152349750909550858015611468578160200160208202803883390190505b50935084604051908082528060200260200182016040528015611495578160200160208202803883390190505b509250600091505b600d5482101561154e57600d8054839081106114b557fe5b6000918252602090912001548351600160a060020a03909116908490849081106114db57fe5b600160a060020a03909216602092830290910190910152600d8054600e916000918590811061150657fe5b6000918252602080832090910154600160a060020a03168352820192909252604001902054845185908490811061153957fe5b6020908102909101015260019091019061149d565b600091505b82518210156115fa57825182600101141561156f575084611599565b600454848381518110151561158057fe5b90602001906020020151340281151561159557fe5b0490505b808603955082828151811015156115ac57fe5b90602001906020020151600160a060020a03166108fc829081150290604051600060405180830381858888f193505050501580156115ee573d6000803e3d6000fd5b50600190910190611553565b6000546040805161010090920463ffffffff16825234602083015280517fd05dd570a29015f1fdb157114eafc8f308499cec6a10ecb5b3e46bfc98c3c7dc9281900390910190a1505050505050565b60065460095460008054600454600780546040805160206002610100600186161581026000190190951604601f8101829004820283018201909352828252969889988998899860609889988b9860ff968716989587169790840463ffffffff16969093169490936008939185918301828280156117075780601f106116dc57610100808354040283529160200191611707565b820191906000526020600020905b8154815290600101906020018083116116ea57829003601f168201915b5050855460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152959850879450925084019050828280156117955780601f1061176a57610100808354040283529160200191611795565b820191906000526020600020905b81548152906001019060200180831161177857829003601f168201915b50505050509150965096509650965096509650965090919293949596565b60005433600160a060020a039081166501000000000090920416146117d757600080fd5b6000600160a060020a038416116117ed57600080fd5b6000600160a060020a0383161161180357600080fd5b6000600160a060020a0382161161181957600080fd5b60018054600160a060020a0394851673ffffffffffffffffffffffffffffffffffffffff1991821617909155600280549385169382169390931790925560038054919093169116179055565b60025433600160a060020a0390811691161461188057600080fd5b600160a060020a03821660009081526011602052604090205415156118bf57600160a060020a0382166000908152601160205260409020819055610f27565b600160a060020a03821660009081526011602052604090208054820190555050565b6060600f80548060200260200160405190810160405280929190818152602001828054801561118957602002820191906000526020600020908154600160a060020a0316815260019091019060200180831161116b575050505050905090565b600160a060020a031660009081526010602052604090205490565b60025433600160a060020a0390811691161461197757600080fd5b600160a060020a03821660009081526011602052604090208054829003908190551515610f275750600160a060020a0316600090815260116020526040812055565b60005433600160a060020a039081166501000000000090920416146119dd57600080fd5b60005460ff166001146119ef57600080fd5b600160a060020a0382166000908152600e602052604081205411611a1257600080fd5b600160a060020a0382166000908152600e60205260409020548114611a3657600080fd5b611a3f82611af7565b604051600160a060020a0383169082156108fc029083906000818181858888f19350505050158015611a75573d6000803e3d6000fd5b506004805482900390556000546040805161010090920463ffffffff16825260026020830152805130600160a060020a039081169390861692600080516020611cee83398151915292918290030190a36004541515610f27576000805460ff191690555050565b600160a060020a031660009081526011602052604090205490565b600d546000905b80821015611b4a5782600160a060020a0316600d83815481101515611b1f57fe5b600091825260209091200154600160a060020a03161415611b3f57611b4a565b600190910190611afe565b808210611b5357fe5b600182018114611bc457600d80546000198301908110611b6f57fe5b600091825260209091200154600d8054600160a060020a039092169184908110611b9557fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b600d80546000198301908110611bd657fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff19169055600d805490611c0f906000198301611caa565b505050600160a060020a03166000908152600e6020526040812055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c6d5782800160ff19823516178555611c9a565b82800160010185558215611c9a579182015b82811115611c9a578235825591602001919060010190611c7f565b50611ca6929150611cd3565b5090565b815481835581811115611cce57600083815260209020611cce918101908301611cd3565b505050565b610b5391905b80821115611ca65760008155600101611cd95600e2343d53ae3ed60cdff27b43bc04fb3bb73cfa592ecf22e7d210054594c734aaa165627a7a7230582007f77b16785217e971da86c73bf3a061af90eeb89dab81c9957fb7a525016cdf0029`

// DeployMNInstance deploys a new Ethereum contract, binding an instance of MNInstance to it.
func DeployMNInstance(auth *bind.TransactOpts, backend bind.ContractBackend, _factoryAddr common.Address, _firstJoiner common.Address, _otherJoiners []common.Address, _otherShares []*big.Int) (common.Address, *types.Transaction, *MNInstance, error) {
	parsed, err := abi.JSON(strings.NewReader(MNInstanceABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MNInstanceBin), backend, _factoryAddr, _firstJoiner, _otherJoiners, _otherShares)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &MNInstance{MNInstanceCaller: MNInstanceCaller{contract: contract}, MNInstanceTransactor: MNInstanceTransactor{contract: contract}, MNInstanceFilterer: MNInstanceFilterer{contract: contract}}, nil
}

// MNInstance is an auto generated Go binding around an Ethereum contract.
type MNInstance struct {
	MNInstanceCaller     // Read-only binding to the contract
	MNInstanceTransactor // Write-only binding to the contract
	MNInstanceFilterer   // Log filterer for contract events
}

// MNInstanceCaller is an auto generated read-only Go binding around an Ethereum contract.
type MNInstanceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNInstanceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type MNInstanceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNInstanceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type MNInstanceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNInstanceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type MNInstanceSession struct {
	Contract     *MNInstance       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MNInstanceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type MNInstanceCallerSession struct {
	Contract *MNInstanceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// MNInstanceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type MNInstanceTransactorSession struct {
	Contract     *MNInstanceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// MNInstanceRaw is an auto generated low-level Go binding around an Ethereum contract.
type MNInstanceRaw struct {
	Contract *MNInstance // Generic contract binding to access the raw methods on
}

// MNInstanceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type MNInstanceCallerRaw struct {
	Contract *MNInstanceCaller // Generic read-only contract binding to access the raw methods on
}

// MNInstanceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type MNInstanceTransactorRaw struct {
	Contract *MNInstanceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMNInstance creates a new instance of MNInstance, bound to a specific deployed contract.
func NewMNInstance(address common.Address, backend bind.ContractBackend) (*MNInstance, error) {
	contract, err := bindMNInstance(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &MNInstance{MNInstanceCaller: MNInstanceCaller{contract: contract}, MNInstanceTransactor: MNInstanceTransactor{contract: contract}, MNInstanceFilterer: MNInstanceFilterer{contract: contract}}, nil
}

// NewMNInstanceCaller creates a new read-only instance of MNInstance, bound to a specific deployed contract.
func NewMNInstanceCaller(address common.Address, caller bind.ContractCaller) (*MNInstanceCaller, error) {
	contract, err := bindMNInstance(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MNInstanceCaller{contract: contract}, nil
}

// NewMNInstanceTransactor creates a new write-only instance of MNInstance, bound to a specific deployed contract.
func NewMNInstanceTransactor(address common.Address, transactor bind.ContractTransactor) (*MNInstanceTransactor, error) {
	contract, err := bindMNInstance(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MNInstanceTransactor{contract: contract}, nil
}

// NewMNInstanceFilterer creates a new log filterer instance of MNInstance, bound to a specific deployed contract.
func NewMNInstanceFilterer(address common.Address, filterer bind.ContractFilterer) (*MNInstanceFilterer, error) {
	contract, err := bindMNInstance(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MNInstanceFilterer{contract: contract}, nil
}

// bindMNInstance binds a generic wrapper to an already deployed contract.
func bindMNInstance(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MNInstanceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MNInstance *MNInstanceRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MNInstance.Contract.MNInstanceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MNInstance *MNInstanceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MNInstance.Contract.MNInstanceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MNInstance *MNInstanceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MNInstance.Contract.MNInstanceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MNInstance *MNInstanceCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MNInstance.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MNInstance *MNInstanceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MNInstance.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MNInstance *MNInstanceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MNInstance.Contract.contract.Transact(opts, method, params...)
}

// GetAdvancedInfo is a free data retrieval call binding the contract method 0x1fdfb43e.
//
// Solidity: function getAdvancedInfo() constant returns(_state uint8, _firstPing uint256, _lastPing uint256, _pingClient address, _ipv4Address string)
func (_MNInstance *MNInstanceCaller) GetAdvancedInfo(opts *bind.CallOpts) (struct {
	State       uint8
	FirstPing   *big.Int
	LastPing    *big.Int
	PingClient  common.Address
	Ipv4Address string
}, error) {
	ret := new(struct {
		State       uint8
		FirstPing   *big.Int
		LastPing    *big.Int
		PingClient  common.Address
		Ipv4Address string
	})
	out := ret
	err := _MNInstance.contract.Call(opts, out, "getAdvancedInfo")
	return *ret, err
}

// GetAdvancedInfo is a free data retrieval call binding the contract method 0x1fdfb43e.
//
// Solidity: function getAdvancedInfo() constant returns(_state uint8, _firstPing uint256, _lastPing uint256, _pingClient address, _ipv4Address string)
func (_MNInstance *MNInstanceSession) GetAdvancedInfo() (struct {
	State       uint8
	FirstPing   *big.Int
	LastPing    *big.Int
	PingClient  common.Address
	Ipv4Address string
}, error) {
	return _MNInstance.Contract.GetAdvancedInfo(&_MNInstance.CallOpts)
}

// GetAdvancedInfo is a free data retrieval call binding the contract method 0x1fdfb43e.
//
// Solidity: function getAdvancedInfo() constant returns(_state uint8, _firstPing uint256, _lastPing uint256, _pingClient address, _ipv4Address string)
func (_MNInstance *MNInstanceCallerSession) GetAdvancedInfo() (struct {
	State       uint8
	FirstPing   *big.Int
	LastPing    *big.Int
	PingClient  common.Address
	Ipv4Address string
}, error) {
	return _MNInstance.Contract.GetAdvancedInfo(&_MNInstance.CallOpts)
}

// GetBasicInfo is a free data retrieval call binding the contract method 0x9f999da3.
//
// Solidity: function getBasicInfo() constant returns(_tier uint8, _isPrivate bool, _proposedId uint32, _state uint8, _ipv4Address string, _alias string, _total_deposit uint256)
func (_MNInstance *MNInstanceCaller) GetBasicInfo(opts *bind.CallOpts) (struct {
	Tier          uint8
	IsPrivate     bool
	ProposedId    uint32
	State         uint8
	Ipv4Address   string
	Alias         string
	Total_deposit *big.Int
}, error) {
	ret := new(struct {
		Tier          uint8
		IsPrivate     bool
		ProposedId    uint32
		State         uint8
		Ipv4Address   string
		Alias         string
		Total_deposit *big.Int
	})
	out := ret
	err := _MNInstance.contract.Call(opts, out, "getBasicInfo")
	return *ret, err
}

// GetBasicInfo is a free data retrieval call binding the contract method 0x9f999da3.
//
// Solidity: function getBasicInfo() constant returns(_tier uint8, _isPrivate bool, _proposedId uint32, _state uint8, _ipv4Address string, _alias string, _total_deposit uint256)
func (_MNInstance *MNInstanceSession) GetBasicInfo() (struct {
	Tier          uint8
	IsPrivate     bool
	ProposedId    uint32
	State         uint8
	Ipv4Address   string
	Alias         string
	Total_deposit *big.Int
}, error) {
	return _MNInstance.Contract.GetBasicInfo(&_MNInstance.CallOpts)
}

// GetBasicInfo is a free data retrieval call binding the contract method 0x9f999da3.
//
// Solidity: function getBasicInfo() constant returns(_tier uint8, _isPrivate bool, _proposedId uint32, _state uint8, _ipv4Address string, _alias string, _total_deposit uint256)
func (_MNInstance *MNInstanceCallerSession) GetBasicInfo() (struct {
	Tier          uint8
	IsPrivate     bool
	ProposedId    uint32
	State         uint8
	Ipv4Address   string
	Alias         string
	Total_deposit *big.Int
}, error) {
	return _MNInstance.Contract.GetBasicInfo(&_MNInstance.CallOpts)
}

// GetId is a free data retrieval call binding the contract method 0x5d1ca631.
//
// Solidity: function getId() constant returns(_id uint32)
func (_MNInstance *MNInstanceCaller) GetId(opts *bind.CallOpts) (uint32, error) {
	var (
		ret0 = new(uint32)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getId")
	return *ret0, err
}

// GetId is a free data retrieval call binding the contract method 0x5d1ca631.
//
// Solidity: function getId() constant returns(_id uint32)
func (_MNInstance *MNInstanceSession) GetId() (uint32, error) {
	return _MNInstance.Contract.GetId(&_MNInstance.CallOpts)
}

// GetId is a free data retrieval call binding the contract method 0x5d1ca631.
//
// Solidity: function getId() constant returns(_id uint32)
func (_MNInstance *MNInstanceCallerSession) GetId() (uint32, error) {
	return _MNInstance.Contract.GetId(&_MNInstance.CallOpts)
}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() constant returns(_state uint8, _node_id uint32, _total_deposit uint256, _tier uint8, _is_halo_hosting bool, _ping_client address, _first_ping uint256, _last_ping uint256, _ipv4_address string, _alias string)
func (_MNInstance *MNInstanceCaller) GetInfo(opts *bind.CallOpts) (struct {
	State           uint8
	Node_id         uint32
	Total_deposit   *big.Int
	Tier            uint8
	Is_halo_hosting bool
	Ping_client     common.Address
	First_ping      *big.Int
	Last_ping       *big.Int
	Ipv4_address    string
	Alias           string
}, error) {
	ret := new(struct {
		State           uint8
		Node_id         uint32
		Total_deposit   *big.Int
		Tier            uint8
		Is_halo_hosting bool
		Ping_client     common.Address
		First_ping      *big.Int
		Last_ping       *big.Int
		Ipv4_address    string
		Alias           string
	})
	out := ret
	err := _MNInstance.contract.Call(opts, out, "getInfo")
	return *ret, err
}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() constant returns(_state uint8, _node_id uint32, _total_deposit uint256, _tier uint8, _is_halo_hosting bool, _ping_client address, _first_ping uint256, _last_ping uint256, _ipv4_address string, _alias string)
func (_MNInstance *MNInstanceSession) GetInfo() (struct {
	State           uint8
	Node_id         uint32
	Total_deposit   *big.Int
	Tier            uint8
	Is_halo_hosting bool
	Ping_client     common.Address
	First_ping      *big.Int
	Last_ping       *big.Int
	Ipv4_address    string
	Alias           string
}, error) {
	return _MNInstance.Contract.GetInfo(&_MNInstance.CallOpts)
}

// GetInfo is a free data retrieval call binding the contract method 0x5a9b0b89.
//
// Solidity: function getInfo() constant returns(_state uint8, _node_id uint32, _total_deposit uint256, _tier uint8, _is_halo_hosting bool, _ping_client address, _first_ping uint256, _last_ping uint256, _ipv4_address string, _alias string)
func (_MNInstance *MNInstanceCallerSession) GetInfo() (struct {
	State           uint8
	Node_id         uint32
	Total_deposit   *big.Int
	Tier            uint8
	Is_halo_hosting bool
	Ping_client     common.Address
	First_ping      *big.Int
	Last_ping       *big.Int
	Ipv4_address    string
	Alias           string
}, error) {
	return _MNInstance.Contract.GetInfo(&_MNInstance.CallOpts)
}

// GetJoinerList is a free data retrieval call binding the contract method 0xb326e9fd.
//
// Solidity: function getJoinerList() constant returns(_joiner_list address[])
func (_MNInstance *MNInstanceCaller) GetJoinerList(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getJoinerList")
	return *ret0, err
}

// GetJoinerList is a free data retrieval call binding the contract method 0xb326e9fd.
//
// Solidity: function getJoinerList() constant returns(_joiner_list address[])
func (_MNInstance *MNInstanceSession) GetJoinerList() ([]common.Address, error) {
	return _MNInstance.Contract.GetJoinerList(&_MNInstance.CallOpts)
}

// GetJoinerList is a free data retrieval call binding the contract method 0xb326e9fd.
//
// Solidity: function getJoinerList() constant returns(_joiner_list address[])
func (_MNInstance *MNInstanceCallerSession) GetJoinerList() ([]common.Address, error) {
	return _MNInstance.Contract.GetJoinerList(&_MNInstance.CallOpts)
}

// GetJoinerShare is a free data retrieval call binding the contract method 0x393c8fa8.
//
// Solidity: function getJoinerShare(_joinerAddress address) constant returns(_joiner_share uint256)
func (_MNInstance *MNInstanceCaller) GetJoinerShare(opts *bind.CallOpts, _joinerAddress common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getJoinerShare", _joinerAddress)
	return *ret0, err
}

// GetJoinerShare is a free data retrieval call binding the contract method 0x393c8fa8.
//
// Solidity: function getJoinerShare(_joinerAddress address) constant returns(_joiner_share uint256)
func (_MNInstance *MNInstanceSession) GetJoinerShare(_joinerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetJoinerShare(&_MNInstance.CallOpts, _joinerAddress)
}

// GetJoinerShare is a free data retrieval call binding the contract method 0x393c8fa8.
//
// Solidity: function getJoinerShare(_joinerAddress address) constant returns(_joiner_share uint256)
func (_MNInstance *MNInstanceCallerSession) GetJoinerShare(_joinerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetJoinerShare(&_MNInstance.CallOpts, _joinerAddress)
}

// GetOwnerList is a free data retrieval call binding the contract method 0x58100370.
//
// Solidity: function getOwnerList() constant returns(_ownerList address[])
func (_MNInstance *MNInstanceCaller) GetOwnerList(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getOwnerList")
	return *ret0, err
}

// GetOwnerList is a free data retrieval call binding the contract method 0x58100370.
//
// Solidity: function getOwnerList() constant returns(_ownerList address[])
func (_MNInstance *MNInstanceSession) GetOwnerList() ([]common.Address, error) {
	return _MNInstance.Contract.GetOwnerList(&_MNInstance.CallOpts)
}

// GetOwnerList is a free data retrieval call binding the contract method 0x58100370.
//
// Solidity: function getOwnerList() constant returns(_ownerList address[])
func (_MNInstance *MNInstanceCallerSession) GetOwnerList() ([]common.Address, error) {
	return _MNInstance.Contract.GetOwnerList(&_MNInstance.CallOpts)
}

// GetOwnerShare is a free data retrieval call binding the contract method 0x3268e7bc.
//
// Solidity: function getOwnerShare(_ownerAddress address) constant returns(_ownerShare uint256)
func (_MNInstance *MNInstanceCaller) GetOwnerShare(opts *bind.CallOpts, _ownerAddress common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getOwnerShare", _ownerAddress)
	return *ret0, err
}

// GetOwnerShare is a free data retrieval call binding the contract method 0x3268e7bc.
//
// Solidity: function getOwnerShare(_ownerAddress address) constant returns(_ownerShare uint256)
func (_MNInstance *MNInstanceSession) GetOwnerShare(_ownerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetOwnerShare(&_MNInstance.CallOpts, _ownerAddress)
}

// GetOwnerShare is a free data retrieval call binding the contract method 0x3268e7bc.
//
// Solidity: function getOwnerShare(_ownerAddress address) constant returns(_ownerShare uint256)
func (_MNInstance *MNInstanceCallerSession) GetOwnerShare(_ownerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetOwnerShare(&_MNInstance.CallOpts, _ownerAddress)
}

// GetPrivateList is a free data retrieval call binding the contract method 0xce88de60.
//
// Solidity: function getPrivateList() constant returns(_joiner_list address[])
func (_MNInstance *MNInstanceCaller) GetPrivateList(opts *bind.CallOpts) ([]common.Address, error) {
	var (
		ret0 = new([]common.Address)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getPrivateList")
	return *ret0, err
}

// GetPrivateList is a free data retrieval call binding the contract method 0xce88de60.
//
// Solidity: function getPrivateList() constant returns(_joiner_list address[])
func (_MNInstance *MNInstanceSession) GetPrivateList() ([]common.Address, error) {
	return _MNInstance.Contract.GetPrivateList(&_MNInstance.CallOpts)
}

// GetPrivateList is a free data retrieval call binding the contract method 0xce88de60.
//
// Solidity: function getPrivateList() constant returns(_joiner_list address[])
func (_MNInstance *MNInstanceCallerSession) GetPrivateList() ([]common.Address, error) {
	return _MNInstance.Contract.GetPrivateList(&_MNInstance.CallOpts)
}

// GetPrivateShare is a free data retrieval call binding the contract method 0xe236a397.
//
// Solidity: function getPrivateShare(_joinerAddress address) constant returns(_joiner_share uint256)
func (_MNInstance *MNInstanceCaller) GetPrivateShare(opts *bind.CallOpts, _joinerAddress common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getPrivateShare", _joinerAddress)
	return *ret0, err
}

// GetPrivateShare is a free data retrieval call binding the contract method 0xe236a397.
//
// Solidity: function getPrivateShare(_joinerAddress address) constant returns(_joiner_share uint256)
func (_MNInstance *MNInstanceSession) GetPrivateShare(_joinerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetPrivateShare(&_MNInstance.CallOpts, _joinerAddress)
}

// GetPrivateShare is a free data retrieval call binding the contract method 0xe236a397.
//
// Solidity: function getPrivateShare(_joinerAddress address) constant returns(_joiner_share uint256)
func (_MNInstance *MNInstanceCallerSession) GetPrivateShare(_joinerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetPrivateShare(&_MNInstance.CallOpts, _joinerAddress)
}

// GetSecurityAddrs is a free data retrieval call binding the contract method 0x7117c4a7.
//
// Solidity: function getSecurityAddrs() constant returns(_factory address, _admin address, marketplace address, reward address)
func (_MNInstance *MNInstanceCaller) GetSecurityAddrs(opts *bind.CallOpts) (struct {
	Factory     common.Address
	Admin       common.Address
	Marketplace common.Address
	Reward      common.Address
}, error) {
	ret := new(struct {
		Factory     common.Address
		Admin       common.Address
		Marketplace common.Address
		Reward      common.Address
	})
	out := ret
	err := _MNInstance.contract.Call(opts, out, "getSecurityAddrs")
	return *ret, err
}

// GetSecurityAddrs is a free data retrieval call binding the contract method 0x7117c4a7.
//
// Solidity: function getSecurityAddrs() constant returns(_factory address, _admin address, marketplace address, reward address)
func (_MNInstance *MNInstanceSession) GetSecurityAddrs() (struct {
	Factory     common.Address
	Admin       common.Address
	Marketplace common.Address
	Reward      common.Address
}, error) {
	return _MNInstance.Contract.GetSecurityAddrs(&_MNInstance.CallOpts)
}

// GetSecurityAddrs is a free data retrieval call binding the contract method 0x7117c4a7.
//
// Solidity: function getSecurityAddrs() constant returns(_factory address, _admin address, marketplace address, reward address)
func (_MNInstance *MNInstanceCallerSession) GetSecurityAddrs() (struct {
	Factory     common.Address
	Admin       common.Address
	Marketplace common.Address
	Reward      common.Address
}, error) {
	return _MNInstance.Contract.GetSecurityAddrs(&_MNInstance.CallOpts)
}

// GetShareLocked is a free data retrieval call binding the contract method 0xfbe7db85.
//
// Solidity: function getShareLocked(_ownerAddress address) constant returns(_ownerShareLocked uint256)
func (_MNInstance *MNInstanceCaller) GetShareLocked(opts *bind.CallOpts, _ownerAddress common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getShareLocked", _ownerAddress)
	return *ret0, err
}

// GetShareLocked is a free data retrieval call binding the contract method 0xfbe7db85.
//
// Solidity: function getShareLocked(_ownerAddress address) constant returns(_ownerShareLocked uint256)
func (_MNInstance *MNInstanceSession) GetShareLocked(_ownerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetShareLocked(&_MNInstance.CallOpts, _ownerAddress)
}

// GetShareLocked is a free data retrieval call binding the contract method 0xfbe7db85.
//
// Solidity: function getShareLocked(_ownerAddress address) constant returns(_ownerShareLocked uint256)
func (_MNInstance *MNInstanceCallerSession) GetShareLocked(_ownerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetShareLocked(&_MNInstance.CallOpts, _ownerAddress)
}

// GetShareUnlocked is a free data retrieval call binding the contract method 0x0f6a134f.
//
// Solidity: function getShareUnlocked(_ownerAddress address) constant returns(_ownerShareUnlocked uint256)
func (_MNInstance *MNInstanceCaller) GetShareUnlocked(opts *bind.CallOpts, _ownerAddress common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getShareUnlocked", _ownerAddress)
	return *ret0, err
}

// GetShareUnlocked is a free data retrieval call binding the contract method 0x0f6a134f.
//
// Solidity: function getShareUnlocked(_ownerAddress address) constant returns(_ownerShareUnlocked uint256)
func (_MNInstance *MNInstanceSession) GetShareUnlocked(_ownerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetShareUnlocked(&_MNInstance.CallOpts, _ownerAddress)
}

// GetShareUnlocked is a free data retrieval call binding the contract method 0x0f6a134f.
//
// Solidity: function getShareUnlocked(_ownerAddress address) constant returns(_ownerShareUnlocked uint256)
func (_MNInstance *MNInstanceCallerSession) GetShareUnlocked(_ownerAddress common.Address) (*big.Int, error) {
	return _MNInstance.Contract.GetShareUnlocked(&_MNInstance.CallOpts, _ownerAddress)
}

// GetState is a free data retrieval call binding the contract method 0x1865c57d.
//
// Solidity: function getState() constant returns(_state uint8)
func (_MNInstance *MNInstanceCaller) GetState(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getState")
	return *ret0, err
}

// GetState is a free data retrieval call binding the contract method 0x1865c57d.
//
// Solidity: function getState() constant returns(_state uint8)
func (_MNInstance *MNInstanceSession) GetState() (uint8, error) {
	return _MNInstance.Contract.GetState(&_MNInstance.CallOpts)
}

// GetState is a free data retrieval call binding the contract method 0x1865c57d.
//
// Solidity: function getState() constant returns(_state uint8)
func (_MNInstance *MNInstanceCallerSession) GetState() (uint8, error) {
	return _MNInstance.Contract.GetState(&_MNInstance.CallOpts)
}

// GetTier is a free data retrieval call binding the contract method 0x5ad701c2.
//
// Solidity: function getTier() constant returns(_tier uint8)
func (_MNInstance *MNInstanceCaller) GetTier(opts *bind.CallOpts) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _MNInstance.contract.Call(opts, out, "getTier")
	return *ret0, err
}

// GetTier is a free data retrieval call binding the contract method 0x5ad701c2.
//
// Solidity: function getTier() constant returns(_tier uint8)
func (_MNInstance *MNInstanceSession) GetTier() (uint8, error) {
	return _MNInstance.Contract.GetTier(&_MNInstance.CallOpts)
}

// GetTier is a free data retrieval call binding the contract method 0x5ad701c2.
//
// Solidity: function getTier() constant returns(_tier uint8)
func (_MNInstance *MNInstanceCallerSession) GetTier() (uint8, error) {
	return _MNInstance.Contract.GetTier(&_MNInstance.CallOpts)
}

// Destroy is a paid mutator transaction binding the contract method 0x00f55d9d.
//
// Solidity: function destroy(withdrawer address) returns()
func (_MNInstance *MNInstanceTransactor) Destroy(opts *bind.TransactOpts, withdrawer common.Address) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "destroy", withdrawer)
}

// Destroy is a paid mutator transaction binding the contract method 0x00f55d9d.
//
// Solidity: function destroy(withdrawer address) returns()
func (_MNInstance *MNInstanceSession) Destroy(withdrawer common.Address) (*types.Transaction, error) {
	return _MNInstance.Contract.Destroy(&_MNInstance.TransactOpts, withdrawer)
}

// Destroy is a paid mutator transaction binding the contract method 0x00f55d9d.
//
// Solidity: function destroy(withdrawer address) returns()
func (_MNInstance *MNInstanceTransactorSession) Destroy(withdrawer common.Address) (*types.Transaction, error) {
	return _MNInstance.Contract.Destroy(&_MNInstance.TransactOpts, withdrawer)
}

// DistributeReward is a paid mutator transaction binding the contract method 0x8f73c5ae.
//
// Solidity: function distributeReward() returns()
func (_MNInstance *MNInstanceTransactor) DistributeReward(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "distributeReward")
}

// DistributeReward is a paid mutator transaction binding the contract method 0x8f73c5ae.
//
// Solidity: function distributeReward() returns()
func (_MNInstance *MNInstanceSession) DistributeReward() (*types.Transaction, error) {
	return _MNInstance.Contract.DistributeReward(&_MNInstance.TransactOpts)
}

// DistributeReward is a paid mutator transaction binding the contract method 0x8f73c5ae.
//
// Solidity: function distributeReward() returns()
func (_MNInstance *MNInstanceTransactorSession) DistributeReward() (*types.Transaction, error) {
	return _MNInstance.Contract.DistributeReward(&_MNInstance.TransactOpts)
}

// DoPing is a paid mutator transaction binding the contract method 0x44811585.
//
// Solidity: function doPing(_pinger address, _ipv4Address string) returns()
func (_MNInstance *MNInstanceTransactor) DoPing(opts *bind.TransactOpts, _pinger common.Address, _ipv4Address string) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "doPing", _pinger, _ipv4Address)
}

// DoPing is a paid mutator transaction binding the contract method 0x44811585.
//
// Solidity: function doPing(_pinger address, _ipv4Address string) returns()
func (_MNInstance *MNInstanceSession) DoPing(_pinger common.Address, _ipv4Address string) (*types.Transaction, error) {
	return _MNInstance.Contract.DoPing(&_MNInstance.TransactOpts, _pinger, _ipv4Address)
}

// DoPing is a paid mutator transaction binding the contract method 0x44811585.
//
// Solidity: function doPing(_pinger address, _ipv4Address string) returns()
func (_MNInstance *MNInstanceTransactorSession) DoPing(_pinger common.Address, _ipv4Address string) (*types.Transaction, error) {
	return _MNInstance.Contract.DoPing(&_MNInstance.TransactOpts, _pinger, _ipv4Address)
}

// Join is a paid mutator transaction binding the contract method 0x28ffe6c8.
//
// Solidity: function join(_joiner address) returns()
func (_MNInstance *MNInstanceTransactor) Join(opts *bind.TransactOpts, _joiner common.Address) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "join", _joiner)
}

// Join is a paid mutator transaction binding the contract method 0x28ffe6c8.
//
// Solidity: function join(_joiner address) returns()
func (_MNInstance *MNInstanceSession) Join(_joiner common.Address) (*types.Transaction, error) {
	return _MNInstance.Contract.Join(&_MNInstance.TransactOpts, _joiner)
}

// Join is a paid mutator transaction binding the contract method 0x28ffe6c8.
//
// Solidity: function join(_joiner address) returns()
func (_MNInstance *MNInstanceTransactorSession) Join(_joiner common.Address) (*types.Transaction, error) {
	return _MNInstance.Contract.Join(&_MNInstance.TransactOpts, _joiner)
}

// LockShare is a paid mutator transaction binding the contract method 0xc8b04290.
//
// Solidity: function lockShare(_ownerAddress address, _shareToBeLocked uint256) returns()
func (_MNInstance *MNInstanceTransactor) LockShare(opts *bind.TransactOpts, _ownerAddress common.Address, _shareToBeLocked *big.Int) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "lockShare", _ownerAddress, _shareToBeLocked)
}

// LockShare is a paid mutator transaction binding the contract method 0xc8b04290.
//
// Solidity: function lockShare(_ownerAddress address, _shareToBeLocked uint256) returns()
func (_MNInstance *MNInstanceSession) LockShare(_ownerAddress common.Address, _shareToBeLocked *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.LockShare(&_MNInstance.TransactOpts, _ownerAddress, _shareToBeLocked)
}

// LockShare is a paid mutator transaction binding the contract method 0xc8b04290.
//
// Solidity: function lockShare(_ownerAddress address, _shareToBeLocked uint256) returns()
func (_MNInstance *MNInstanceTransactorSession) LockShare(_ownerAddress common.Address, _shareToBeLocked *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.LockShare(&_MNInstance.TransactOpts, _ownerAddress, _shareToBeLocked)
}

// SetAdvancedInfo is a paid mutator transaction binding the contract method 0x310e6e3a.
//
// Solidity: function setAdvancedInfo(_state uint8, _firstPing uint256, _lastPing uint256, _pingClient address, _ipv4Address string) returns()
func (_MNInstance *MNInstanceTransactor) SetAdvancedInfo(opts *bind.TransactOpts, _state uint8, _firstPing *big.Int, _lastPing *big.Int, _pingClient common.Address, _ipv4Address string) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "setAdvancedInfo", _state, _firstPing, _lastPing, _pingClient, _ipv4Address)
}

// SetAdvancedInfo is a paid mutator transaction binding the contract method 0x310e6e3a.
//
// Solidity: function setAdvancedInfo(_state uint8, _firstPing uint256, _lastPing uint256, _pingClient address, _ipv4Address string) returns()
func (_MNInstance *MNInstanceSession) SetAdvancedInfo(_state uint8, _firstPing *big.Int, _lastPing *big.Int, _pingClient common.Address, _ipv4Address string) (*types.Transaction, error) {
	return _MNInstance.Contract.SetAdvancedInfo(&_MNInstance.TransactOpts, _state, _firstPing, _lastPing, _pingClient, _ipv4Address)
}

// SetAdvancedInfo is a paid mutator transaction binding the contract method 0x310e6e3a.
//
// Solidity: function setAdvancedInfo(_state uint8, _firstPing uint256, _lastPing uint256, _pingClient address, _ipv4Address string) returns()
func (_MNInstance *MNInstanceTransactorSession) SetAdvancedInfo(_state uint8, _firstPing *big.Int, _lastPing *big.Int, _pingClient common.Address, _ipv4Address string) (*types.Transaction, error) {
	return _MNInstance.Contract.SetAdvancedInfo(&_MNInstance.TransactOpts, _state, _firstPing, _lastPing, _pingClient, _ipv4Address)
}

// SetBasicInfo is a paid mutator transaction binding the contract method 0x8473a590.
//
// Solidity: function setBasicInfo(_tier uint8, _tierPrice uint256, _isPrivate bool, _proposedId uint32, _state uint8, _isHaloHosting bool, _ipv4Address string, _alias string) returns()
func (_MNInstance *MNInstanceTransactor) SetBasicInfo(opts *bind.TransactOpts, _tier uint8, _tierPrice *big.Int, _isPrivate bool, _proposedId uint32, _state uint8, _isHaloHosting bool, _ipv4Address string, _alias string) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "setBasicInfo", _tier, _tierPrice, _isPrivate, _proposedId, _state, _isHaloHosting, _ipv4Address, _alias)
}

// SetBasicInfo is a paid mutator transaction binding the contract method 0x8473a590.
//
// Solidity: function setBasicInfo(_tier uint8, _tierPrice uint256, _isPrivate bool, _proposedId uint32, _state uint8, _isHaloHosting bool, _ipv4Address string, _alias string) returns()
func (_MNInstance *MNInstanceSession) SetBasicInfo(_tier uint8, _tierPrice *big.Int, _isPrivate bool, _proposedId uint32, _state uint8, _isHaloHosting bool, _ipv4Address string, _alias string) (*types.Transaction, error) {
	return _MNInstance.Contract.SetBasicInfo(&_MNInstance.TransactOpts, _tier, _tierPrice, _isPrivate, _proposedId, _state, _isHaloHosting, _ipv4Address, _alias)
}

// SetBasicInfo is a paid mutator transaction binding the contract method 0x8473a590.
//
// Solidity: function setBasicInfo(_tier uint8, _tierPrice uint256, _isPrivate bool, _proposedId uint32, _state uint8, _isHaloHosting bool, _ipv4Address string, _alias string) returns()
func (_MNInstance *MNInstanceTransactorSession) SetBasicInfo(_tier uint8, _tierPrice *big.Int, _isPrivate bool, _proposedId uint32, _state uint8, _isHaloHosting bool, _ipv4Address string, _alias string) (*types.Transaction, error) {
	return _MNInstance.Contract.SetBasicInfo(&_MNInstance.TransactOpts, _tier, _tierPrice, _isPrivate, _proposedId, _state, _isHaloHosting, _ipv4Address, _alias)
}

// SetPing is a paid mutator transaction binding the contract method 0x02207294.
//
// Solidity: function setPing(_firstPing uint256, _lastPing uint256) returns()
func (_MNInstance *MNInstanceTransactor) SetPing(opts *bind.TransactOpts, _firstPing *big.Int, _lastPing *big.Int) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "setPing", _firstPing, _lastPing)
}

// SetPing is a paid mutator transaction binding the contract method 0x02207294.
//
// Solidity: function setPing(_firstPing uint256, _lastPing uint256) returns()
func (_MNInstance *MNInstanceSession) SetPing(_firstPing *big.Int, _lastPing *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.SetPing(&_MNInstance.TransactOpts, _firstPing, _lastPing)
}

// SetPing is a paid mutator transaction binding the contract method 0x02207294.
//
// Solidity: function setPing(_firstPing uint256, _lastPing uint256) returns()
func (_MNInstance *MNInstanceTransactorSession) SetPing(_firstPing *big.Int, _lastPing *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.SetPing(&_MNInstance.TransactOpts, _firstPing, _lastPing)
}

// SetSecurityAddrs is a paid mutator transaction binding the contract method 0xbe854c1d.
//
// Solidity: function setSecurityAddrs(_mnAdmin address, _mnMarketplace address, _mnReward address) returns()
func (_MNInstance *MNInstanceTransactor) SetSecurityAddrs(opts *bind.TransactOpts, _mnAdmin common.Address, _mnMarketplace common.Address, _mnReward common.Address) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "setSecurityAddrs", _mnAdmin, _mnMarketplace, _mnReward)
}

// SetSecurityAddrs is a paid mutator transaction binding the contract method 0xbe854c1d.
//
// Solidity: function setSecurityAddrs(_mnAdmin address, _mnMarketplace address, _mnReward address) returns()
func (_MNInstance *MNInstanceSession) SetSecurityAddrs(_mnAdmin common.Address, _mnMarketplace common.Address, _mnReward common.Address) (*types.Transaction, error) {
	return _MNInstance.Contract.SetSecurityAddrs(&_MNInstance.TransactOpts, _mnAdmin, _mnMarketplace, _mnReward)
}

// SetSecurityAddrs is a paid mutator transaction binding the contract method 0xbe854c1d.
//
// Solidity: function setSecurityAddrs(_mnAdmin address, _mnMarketplace address, _mnReward address) returns()
func (_MNInstance *MNInstanceTransactorSession) SetSecurityAddrs(_mnAdmin common.Address, _mnMarketplace common.Address, _mnReward common.Address) (*types.Transaction, error) {
	return _MNInstance.Contract.SetSecurityAddrs(&_MNInstance.TransactOpts, _mnAdmin, _mnMarketplace, _mnReward)
}

// SetState is a paid mutator transaction binding the contract method 0x56de96db.
//
// Solidity: function setState(_state uint8) returns()
func (_MNInstance *MNInstanceTransactor) SetState(opts *bind.TransactOpts, _state uint8) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "setState", _state)
}

// SetState is a paid mutator transaction binding the contract method 0x56de96db.
//
// Solidity: function setState(_state uint8) returns()
func (_MNInstance *MNInstanceSession) SetState(_state uint8) (*types.Transaction, error) {
	return _MNInstance.Contract.SetState(&_MNInstance.TransactOpts, _state)
}

// SetState is a paid mutator transaction binding the contract method 0x56de96db.
//
// Solidity: function setState(_state uint8) returns()
func (_MNInstance *MNInstanceTransactorSession) SetState(_state uint8) (*types.Transaction, error) {
	return _MNInstance.Contract.SetState(&_MNInstance.TransactOpts, _state)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x171c00fd.
//
// Solidity: function transferOwnership(seller address, buyer address, _shareSold uint256) returns()
func (_MNInstance *MNInstanceTransactor) TransferOwnership(opts *bind.TransactOpts, seller common.Address, buyer common.Address, _shareSold *big.Int) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "transferOwnership", seller, buyer, _shareSold)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x171c00fd.
//
// Solidity: function transferOwnership(seller address, buyer address, _shareSold uint256) returns()
func (_MNInstance *MNInstanceSession) TransferOwnership(seller common.Address, buyer common.Address, _shareSold *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.TransferOwnership(&_MNInstance.TransactOpts, seller, buyer, _shareSold)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0x171c00fd.
//
// Solidity: function transferOwnership(seller address, buyer address, _shareSold uint256) returns()
func (_MNInstance *MNInstanceTransactorSession) TransferOwnership(seller common.Address, buyer common.Address, _shareSold *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.TransferOwnership(&_MNInstance.TransactOpts, seller, buyer, _shareSold)
}

// UnlockShare is a paid mutator transaction binding the contract method 0xf096ca8b.
//
// Solidity: function unlockShare(_ownerAddress address, _shareToBeUnlocked uint256) returns()
func (_MNInstance *MNInstanceTransactor) UnlockShare(opts *bind.TransactOpts, _ownerAddress common.Address, _shareToBeUnlocked *big.Int) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "unlockShare", _ownerAddress, _shareToBeUnlocked)
}

// UnlockShare is a paid mutator transaction binding the contract method 0xf096ca8b.
//
// Solidity: function unlockShare(_ownerAddress address, _shareToBeUnlocked uint256) returns()
func (_MNInstance *MNInstanceSession) UnlockShare(_ownerAddress common.Address, _shareToBeUnlocked *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.UnlockShare(&_MNInstance.TransactOpts, _ownerAddress, _shareToBeUnlocked)
}

// UnlockShare is a paid mutator transaction binding the contract method 0xf096ca8b.
//
// Solidity: function unlockShare(_ownerAddress address, _shareToBeUnlocked uint256) returns()
func (_MNInstance *MNInstanceTransactorSession) UnlockShare(_ownerAddress common.Address, _shareToBeUnlocked *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.UnlockShare(&_MNInstance.TransactOpts, _ownerAddress, _shareToBeUnlocked)
}

// Withdraw is a paid mutator transaction binding the contract method 0xf3fef3a3.
//
// Solidity: function withdraw(withdrawer address, _withdrawValue uint256) returns()
func (_MNInstance *MNInstanceTransactor) Withdraw(opts *bind.TransactOpts, withdrawer common.Address, _withdrawValue *big.Int) (*types.Transaction, error) {
	return _MNInstance.contract.Transact(opts, "withdraw", withdrawer, _withdrawValue)
}

// Withdraw is a paid mutator transaction binding the contract method 0xf3fef3a3.
//
// Solidity: function withdraw(withdrawer address, _withdrawValue uint256) returns()
func (_MNInstance *MNInstanceSession) Withdraw(withdrawer common.Address, _withdrawValue *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.Withdraw(&_MNInstance.TransactOpts, withdrawer, _withdrawValue)
}

// Withdraw is a paid mutator transaction binding the contract method 0xf3fef3a3.
//
// Solidity: function withdraw(withdrawer address, _withdrawValue uint256) returns()
func (_MNInstance *MNInstanceTransactorSession) Withdraw(withdrawer common.Address, _withdrawValue *big.Int) (*types.Transaction, error) {
	return _MNInstance.Contract.Withdraw(&_MNInstance.TransactOpts, withdrawer, _withdrawValue)
}

// MNInstanceEvent_ActionIterator is returned from FilterEvent_Action and is used to iterate over the raw logs and unpacked data for Event_Action events raised by the MNInstance contract.
type MNInstanceEvent_ActionIterator struct {
	Event *MNInstanceEvent_Action // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MNInstanceEvent_ActionIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MNInstanceEvent_Action)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MNInstanceEvent_Action)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MNInstanceEvent_ActionIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MNInstanceEvent_ActionIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MNInstanceEvent_Action represents a Event_Action event raised by the MNInstance contract.
type MNInstanceEvent_Action struct {
	JoinerAddr common.Address
	NodeAddr   common.Address
	NodeId     uint32
	EventType  uint8
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterEvent_Action is a free log retrieval operation binding the contract event 0xe2343d53ae3ed60cdff27b43bc04fb3bb73cfa592ecf22e7d210054594c734aa.
//
// Solidity: event Event_Action(_joinerAddr indexed address, _nodeAddr indexed address, _nodeId uint32, _eventType uint8)
func (_MNInstance *MNInstanceFilterer) FilterEvent_Action(opts *bind.FilterOpts, _joinerAddr []common.Address, _nodeAddr []common.Address) (*MNInstanceEvent_ActionIterator, error) {

	var _joinerAddrRule []interface{}
	for _, _joinerAddrItem := range _joinerAddr {
		_joinerAddrRule = append(_joinerAddrRule, _joinerAddrItem)
	}
	var _nodeAddrRule []interface{}
	for _, _nodeAddrItem := range _nodeAddr {
		_nodeAddrRule = append(_nodeAddrRule, _nodeAddrItem)
	}

	logs, sub, err := _MNInstance.contract.FilterLogs(opts, "Event_Action", _joinerAddrRule, _nodeAddrRule)
	if err != nil {
		return nil, err
	}
	return &MNInstanceEvent_ActionIterator{contract: _MNInstance.contract, event: "Event_Action", logs: logs, sub: sub}, nil
}

// WatchEvent_Action is a free log subscription operation binding the contract event 0xe2343d53ae3ed60cdff27b43bc04fb3bb73cfa592ecf22e7d210054594c734aa.
//
// Solidity: event Event_Action(_joinerAddr indexed address, _nodeAddr indexed address, _nodeId uint32, _eventType uint8)
func (_MNInstance *MNInstanceFilterer) WatchEvent_Action(opts *bind.WatchOpts, sink chan<- *MNInstanceEvent_Action, _joinerAddr []common.Address, _nodeAddr []common.Address) (event.Subscription, error) {

	var _joinerAddrRule []interface{}
	for _, _joinerAddrItem := range _joinerAddr {
		_joinerAddrRule = append(_joinerAddrRule, _joinerAddrItem)
	}
	var _nodeAddrRule []interface{}
	for _, _nodeAddrItem := range _nodeAddr {
		_nodeAddrRule = append(_nodeAddrRule, _nodeAddrItem)
	}

	logs, sub, err := _MNInstance.contract.WatchLogs(opts, "Event_Action", _joinerAddrRule, _nodeAddrRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MNInstanceEvent_Action)
				if err := _MNInstance.contract.UnpackLog(event, "Event_Action", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// MNInstanceEvent_AdminChangeStateIterator is returned from FilterEvent_AdminChangeState and is used to iterate over the raw logs and unpacked data for Event_AdminChangeState events raised by the MNInstance contract.
type MNInstanceEvent_AdminChangeStateIterator struct {
	Event *MNInstanceEvent_AdminChangeState // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MNInstanceEvent_AdminChangeStateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MNInstanceEvent_AdminChangeState)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MNInstanceEvent_AdminChangeState)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MNInstanceEvent_AdminChangeStateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MNInstanceEvent_AdminChangeStateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MNInstanceEvent_AdminChangeState represents a Event_AdminChangeState event raised by the MNInstance contract.
type MNInstanceEvent_AdminChangeState struct {
	State uint8
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterEvent_AdminChangeState is a free log retrieval operation binding the contract event 0xbbb187c9c1fe36f650a38b0805b9e69063fc5c55dceca51340a6e9ae3a35779b.
//
// Solidity: event Event_AdminChangeState(_state uint8)
func (_MNInstance *MNInstanceFilterer) FilterEvent_AdminChangeState(opts *bind.FilterOpts) (*MNInstanceEvent_AdminChangeStateIterator, error) {

	logs, sub, err := _MNInstance.contract.FilterLogs(opts, "Event_AdminChangeState")
	if err != nil {
		return nil, err
	}
	return &MNInstanceEvent_AdminChangeStateIterator{contract: _MNInstance.contract, event: "Event_AdminChangeState", logs: logs, sub: sub}, nil
}

// WatchEvent_AdminChangeState is a free log subscription operation binding the contract event 0xbbb187c9c1fe36f650a38b0805b9e69063fc5c55dceca51340a6e9ae3a35779b.
//
// Solidity: event Event_AdminChangeState(_state uint8)
func (_MNInstance *MNInstanceFilterer) WatchEvent_AdminChangeState(opts *bind.WatchOpts, sink chan<- *MNInstanceEvent_AdminChangeState) (event.Subscription, error) {

	logs, sub, err := _MNInstance.contract.WatchLogs(opts, "Event_AdminChangeState")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MNInstanceEvent_AdminChangeState)
				if err := _MNInstance.contract.UnpackLog(event, "Event_AdminChangeState", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// MNInstanceEvent_RewardIterator is returned from FilterEvent_Reward and is used to iterate over the raw logs and unpacked data for Event_Reward events raised by the MNInstance contract.
type MNInstanceEvent_RewardIterator struct {
	Event *MNInstanceEvent_Reward // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MNInstanceEvent_RewardIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MNInstanceEvent_Reward)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MNInstanceEvent_Reward)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MNInstanceEvent_RewardIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MNInstanceEvent_RewardIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MNInstanceEvent_Reward represents a Event_Reward event raised by the MNInstance contract.
type MNInstanceEvent_Reward struct {
	NodeId uint32
	Value  *big.Int
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterEvent_Reward is a free log retrieval operation binding the contract event 0xd05dd570a29015f1fdb157114eafc8f308499cec6a10ecb5b3e46bfc98c3c7dc.
//
// Solidity: event Event_Reward(_nodeId uint32, _value uint256)
func (_MNInstance *MNInstanceFilterer) FilterEvent_Reward(opts *bind.FilterOpts) (*MNInstanceEvent_RewardIterator, error) {

	logs, sub, err := _MNInstance.contract.FilterLogs(opts, "Event_Reward")
	if err != nil {
		return nil, err
	}
	return &MNInstanceEvent_RewardIterator{contract: _MNInstance.contract, event: "Event_Reward", logs: logs, sub: sub}, nil
}

// WatchEvent_Reward is a free log subscription operation binding the contract event 0xd05dd570a29015f1fdb157114eafc8f308499cec6a10ecb5b3e46bfc98c3c7dc.
//
// Solidity: event Event_Reward(_nodeId uint32, _value uint256)
func (_MNInstance *MNInstanceFilterer) WatchEvent_Reward(opts *bind.WatchOpts, sink chan<- *MNInstanceEvent_Reward) (event.Subscription, error) {

	logs, sub, err := _MNInstance.contract.WatchLogs(opts, "Event_Reward")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MNInstanceEvent_Reward)
				if err := _MNInstance.contract.UnpackLog(event, "Event_Reward", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// MNRewardABI is the input ABI used to generate the binding from.
const MNRewardABI = "[{\"constant\":false,\"inputs\":[{\"name\":\"_mnAddr\",\"type\":\"address\"},{\"name\":\"_ipv4Addr\",\"type\":\"string\"}],\"name\":\"doPing\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_halo_fund_addr\",\"type\":\"address\"}],\"name\":\"AdminSetFundAddr\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_miner_address\",\"type\":\"address\"}],\"name\":\"blockRewardMN\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"receiveFee\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_mnFactoryAddr\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_mn_instanceship_addr\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_node_id\",\"type\":\"uint32\"},{\"indexed\":false,\"name\":\"_event_type\",\"type\":\"uint8\"}],\"name\":\"Event_MNReward\",\"type\":\"event\"}]"

// MNRewardBin is the compiled bytecode used for deploying new contracts.
const MNRewardBin = `0x608060405234801561001057600080fd5b50604051602080610f8c833981016040525160008054600160a060020a031990811633600160a060020a039081169190911780845560018054918316918416919091179055681b1ae4d6e2ef500000600355683635c9adc5dea0000060065568878678326eac9000006009556901969368974c05b00000600c556004805461ffff1990811661138817909155600780548216610fa0179055600a805482166103e8179055600d80549091166101f4179055673e733628714200006005556768155a43676e0000600855674c53ecdc18a60000600b55678ac7230489e80000600e5542601755436016556018805491909416911617909155610e7590819061011790396000f3006080604052600436106100485763ffffffff60e060020a60003504166344811585811461004d57806347ae1d781461007c57806368587be41461009d578063e18b7fcf146100b1575b600080fd5b34801561005957600080fd5b5061007a60048035600160a060020a031690602480359081019101356100b9565b005b34801561008857600080fd5b5061007a600160a060020a0360043516610269565b61007a600160a060020a03600435166102b3565b61007a610364565b60008060008086935083600160a060020a0316631fdfb43e6040518163ffffffff1660e060020a028152600401600060405180830381600087803b15801561010057600080fd5b505af1158015610114573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260a081101561013d57600080fd5b81516020830151604084015160608501516080860180519496939592949193928301929164010000000081111561017357600080fd5b8201602081018481111561018657600080fd5b81516401000000008111828201871017156101a057600080fd5b50979a50959850939650505060ff871660031493506101c29250505057600080fd5b604080517f4481158500000000000000000000000000000000000000000000000000000000815233600160a060020a038181166004840190815260248401948552604484018a9052908816936344811585938b928b9290916064018484808284378201915050945050505050600060405180830381600087803b15801561024857600080fd5b505af115801561025c573d6000803e3d6000fd5b5050505050505050505050565b60005433600160a060020a0390811691161461028457600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b3468018493fba64ef00000146102c857600080fd5b60006013541180156102de575060145460135410155b1561032557601454601380548290039055604051600160a060020a0383169180156108fc02916000818181858888f19350505050158015610323573d6000803e3d6000fd5b505b61032d61037b565b6017544211158061034a57506201518063ffffffff166017544203105b1561035457610361565b61035c6107fa565b426017555b50565b6000341161037157600080fd5b6012805434019055565b6000610385610de0565b6000806000806000806000806000809a505b60048b60ff1610156106c35760ff8b16600090815260116020526040812054995097508796505b88881080156103e757508960ff8c16600481106103d757fe5b6020020151600160a060020a0316155b156105e95760ff8b16600090815260116020526040902080548990811061040a57fe5b6000918252602082200154604080517f1fdfb43e0000000000000000000000000000000000000000000000000000000081529051600160a060020a0390921698508897508792631fdfb43e9260048084019382900301818387803b15801561047157600080fd5b505af1158015610485573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260a08110156104ae57600080fd5b8151602083015160408401516060850151608086018051949693959294919392830192916401000000008111156104e457600080fd5b820160208101848111156104f757600080fd5b815164010000000081118282018710171561051157600080fd5b50979b50959950939750505060ff88166003149350508215915061053790505750600083115b8015610546575060f042839003115b801561055757506201518083830310155b1561058057858a60ff8d166004811061056c57fe5b600160a060020a0390921660209290920201525b60ff84161515610595576001909601956105de565b60ff8b16600090815260116020908152604082208054600181018255908352912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0388161790555b6001909701966103be565b5060005b8663ffffffff1689038110156106915760ff8b1660009081526011602052604090208054828a0190811061061d57fe5b600091825260208083209091015460ff8e168352601190915260409091208054600160a060020a03909216918390811061065357fe5b6000918252602090912001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790556001016105ed565b60ff8b16600090815260116020526040902063ffffffff88168a03906106b79082610dff565b506001909a0199610397565b60009a505b60048b60ff1610156107af5760008a60ff8d16600481106106e557fe5b6020020151600160a060020a03161115610782578960ff8c166004811061070857fe5b60200201519450600160a060020a038516638f73c5ae600360ff8e166004811061072e57fe5b60030201600201546040518263ffffffff1660e060020a0281526004016000604051808303818588803b15801561076457600080fd5b505af1158015610778573d6000803e3d6000fd5b50505050506107aa565b600360ff8c166004811061079257fe5b60030201600201546012600082825401925050819055505b6106c8565b600154604051600160a060020a03909116906000906706f05b59d3b200009082818181858883f193505050501580156107ec573d6000803e3d6000fd5b505050505050505050505050565b6000610804610de0565b601280546013546000928390550192506064600f84020460135560f0620151800463ffffffff1660135481151561083757fe5b04601455506103e860328302819004808352604b840282900460208401819052607d85028390046040850181905260fa86029390930460608501819052910190910101610883826108e0565b6012805490910190556013548101831161089957fe5b600154601354604051600160a060020a039092169190850383900380156108fc02916000818181858888f193505050501580156108da573d6000803e3d6000fd5b50505050565b60006108ea610de0565b6018546000908190600160a060020a03168180808080805b60048810156109c1576003886004811061091857fe5b6003020160010160029054906101000a900461ffff1661ffff16600014156109525760008a896004811061094857fe5b60200201526109a0565b6003886004811061095f57fe5b6003020160010154640100000000900461ffff168c896004811061097f57fe5b602002015181151561098d57fe5b048a896004811061099a57fe5b60200201525b8b88600481106109ac57fe5b60200201519890980197600190970196610902565b600097505b86600160a060020a0316637a0582b96040518163ffffffff1660e060020a028152600401602060405180830381600087803b158015610a0457600080fd5b505af1158015610a18573d6000803e3d6000fd5b505050506040513d6020811015610a2e57600080fd5b505188108015610a3e5750600089115b15610dd05786600160a060020a031663c1599d2c896040518263ffffffff1660e060020a02815260040180828152602001915050602060405180830381600087803b158015610a8c57600080fd5b505af1158015610aa0573d6000803e3d6000fd5b505050506040513d6020811015610ab657600080fd5b5051604080517f1fdfb43e0000000000000000000000000000000000000000000000000000000081529051919750879650600160a060020a03871691631fdfb43e9160048082019260009290919082900301818387803b158015610b1957600080fd5b505af1158015610b2d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260a0811015610b5657600080fd5b815160208301516040840151606085015160808601805194969395929491939283019291640100000000811115610b8c57600080fd5b82016020810184811115610b9f57600080fd5b8151640100000000811182820187101715610bb957600080fd5b505092919050505090505080945081955082965050505084600160a060020a0316639f999da36040518163ffffffff1660e060020a028152600401600060405180830381600087803b158015610c0e57600080fd5b505af1158015610c22573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260e0811015610c4b57600080fd5b815160208301516040840151606085015160808601805194969395929491939283019291640100000000811115610c8157600080fd5b82016020810184811115610c9457600080fd5b8151640100000000811182820187101715610cae57600080fd5b50509291906020018051640100000000811115610cca57600080fd5b82016020810184811115610cdd57600080fd5b8151640100000000811182820187101715610cf757600080fd5b5098995050505060ff8a1660031495505084159350610d1a925050505750600082115b8015610d29575060f042839003115b8015610d3a57506201518083830310155b15610dc5578960ff821660048110610d4e57fe5b602002015190980397859450600160a060020a038516638f73c5ae8b60ff841660048110610d7857fe5b60200201516040518263ffffffff1660e060020a0281526004016000604051808303818588803b158015610dab57600080fd5b505af1158015610dbf573d6000803e3d6000fd5b50505050505b6001909701966109c6565b50969a9950505050505050505050565b6080604051908101604052806004906020820280388339509192915050565b815481835581811115610e2357600083815260209020610e23918101908301610e28565b505050565b610e4691905b80821115610e425760008155600101610e2e565b5090565b905600a165627a7a723058203988e1806d3b4e1ec18b2be023441e6194ef97e009fd17a8d2c92d6229495dbc0029`

// DeployMNReward deploys a new Ethereum contract, binding an instance of MNReward to it.
func DeployMNReward(auth *bind.TransactOpts, backend bind.ContractBackend, _mnFactoryAddr common.Address) (common.Address, *types.Transaction, *MNReward, error) {
	parsed, err := abi.JSON(strings.NewReader(MNRewardABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MNRewardBin), backend, _mnFactoryAddr)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &MNReward{MNRewardCaller: MNRewardCaller{contract: contract}, MNRewardTransactor: MNRewardTransactor{contract: contract}, MNRewardFilterer: MNRewardFilterer{contract: contract}}, nil
}

// MNReward is an auto generated Go binding around an Ethereum contract.
type MNReward struct {
	MNRewardCaller     // Read-only binding to the contract
	MNRewardTransactor // Write-only binding to the contract
	MNRewardFilterer   // Log filterer for contract events
}

// MNRewardCaller is an auto generated read-only Go binding around an Ethereum contract.
type MNRewardCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNRewardTransactor is an auto generated write-only Go binding around an Ethereum contract.
type MNRewardTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNRewardFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type MNRewardFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MNRewardSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type MNRewardSession struct {
	Contract     *MNReward         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MNRewardCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type MNRewardCallerSession struct {
	Contract *MNRewardCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// MNRewardTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type MNRewardTransactorSession struct {
	Contract     *MNRewardTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// MNRewardRaw is an auto generated low-level Go binding around an Ethereum contract.
type MNRewardRaw struct {
	Contract *MNReward // Generic contract binding to access the raw methods on
}

// MNRewardCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type MNRewardCallerRaw struct {
	Contract *MNRewardCaller // Generic read-only contract binding to access the raw methods on
}

// MNRewardTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type MNRewardTransactorRaw struct {
	Contract *MNRewardTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMNReward creates a new instance of MNReward, bound to a specific deployed contract.
func NewMNReward(address common.Address, backend bind.ContractBackend) (*MNReward, error) {
	contract, err := bindMNReward(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &MNReward{MNRewardCaller: MNRewardCaller{contract: contract}, MNRewardTransactor: MNRewardTransactor{contract: contract}, MNRewardFilterer: MNRewardFilterer{contract: contract}}, nil
}

// NewMNRewardCaller creates a new read-only instance of MNReward, bound to a specific deployed contract.
func NewMNRewardCaller(address common.Address, caller bind.ContractCaller) (*MNRewardCaller, error) {
	contract, err := bindMNReward(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MNRewardCaller{contract: contract}, nil
}

// NewMNRewardTransactor creates a new write-only instance of MNReward, bound to a specific deployed contract.
func NewMNRewardTransactor(address common.Address, transactor bind.ContractTransactor) (*MNRewardTransactor, error) {
	contract, err := bindMNReward(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MNRewardTransactor{contract: contract}, nil
}

// NewMNRewardFilterer creates a new log filterer instance of MNReward, bound to a specific deployed contract.
func NewMNRewardFilterer(address common.Address, filterer bind.ContractFilterer) (*MNRewardFilterer, error) {
	contract, err := bindMNReward(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MNRewardFilterer{contract: contract}, nil
}

// bindMNReward binds a generic wrapper to an already deployed contract.
func bindMNReward(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MNRewardABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MNReward *MNRewardRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MNReward.Contract.MNRewardCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MNReward *MNRewardRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MNReward.Contract.MNRewardTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MNReward *MNRewardRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MNReward.Contract.MNRewardTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_MNReward *MNRewardCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _MNReward.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_MNReward *MNRewardTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MNReward.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_MNReward *MNRewardTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _MNReward.Contract.contract.Transact(opts, method, params...)
}

// AdminSetFundAddr is a paid mutator transaction binding the contract method 0x47ae1d78.
//
// Solidity: function AdminSetFundAddr(_halo_fund_addr address) returns()
func (_MNReward *MNRewardTransactor) AdminSetFundAddr(opts *bind.TransactOpts, _halo_fund_addr common.Address) (*types.Transaction, error) {
	return _MNReward.contract.Transact(opts, "AdminSetFundAddr", _halo_fund_addr)
}

// AdminSetFundAddr is a paid mutator transaction binding the contract method 0x47ae1d78.
//
// Solidity: function AdminSetFundAddr(_halo_fund_addr address) returns()
func (_MNReward *MNRewardSession) AdminSetFundAddr(_halo_fund_addr common.Address) (*types.Transaction, error) {
	return _MNReward.Contract.AdminSetFundAddr(&_MNReward.TransactOpts, _halo_fund_addr)
}

// AdminSetFundAddr is a paid mutator transaction binding the contract method 0x47ae1d78.
//
// Solidity: function AdminSetFundAddr(_halo_fund_addr address) returns()
func (_MNReward *MNRewardTransactorSession) AdminSetFundAddr(_halo_fund_addr common.Address) (*types.Transaction, error) {
	return _MNReward.Contract.AdminSetFundAddr(&_MNReward.TransactOpts, _halo_fund_addr)
}

// BlockRewardMN is a paid mutator transaction binding the contract method 0x68587be4.
//
// Solidity: function blockRewardMN(_miner_address address) returns()
func (_MNReward *MNRewardTransactor) BlockRewardMN(opts *bind.TransactOpts, _miner_address common.Address) (*types.Transaction, error) {
	return _MNReward.contract.Transact(opts, "blockRewardMN", _miner_address)
}

// BlockRewardMN is a paid mutator transaction binding the contract method 0x68587be4.
//
// Solidity: function blockRewardMN(_miner_address address) returns()
func (_MNReward *MNRewardSession) BlockRewardMN(_miner_address common.Address) (*types.Transaction, error) {
	return _MNReward.Contract.BlockRewardMN(&_MNReward.TransactOpts, _miner_address)
}

// BlockRewardMN is a paid mutator transaction binding the contract method 0x68587be4.
//
// Solidity: function blockRewardMN(_miner_address address) returns()
func (_MNReward *MNRewardTransactorSession) BlockRewardMN(_miner_address common.Address) (*types.Transaction, error) {
	return _MNReward.Contract.BlockRewardMN(&_MNReward.TransactOpts, _miner_address)
}

// DoPing is a paid mutator transaction binding the contract method 0x44811585.
//
// Solidity: function doPing(_mnAddr address, _ipv4Addr string) returns()
func (_MNReward *MNRewardTransactor) DoPing(opts *bind.TransactOpts, _mnAddr common.Address, _ipv4Addr string) (*types.Transaction, error) {
	return _MNReward.contract.Transact(opts, "doPing", _mnAddr, _ipv4Addr)
}

// DoPing is a paid mutator transaction binding the contract method 0x44811585.
//
// Solidity: function doPing(_mnAddr address, _ipv4Addr string) returns()
func (_MNReward *MNRewardSession) DoPing(_mnAddr common.Address, _ipv4Addr string) (*types.Transaction, error) {
	return _MNReward.Contract.DoPing(&_MNReward.TransactOpts, _mnAddr, _ipv4Addr)
}

// DoPing is a paid mutator transaction binding the contract method 0x44811585.
//
// Solidity: function doPing(_mnAddr address, _ipv4Addr string) returns()
func (_MNReward *MNRewardTransactorSession) DoPing(_mnAddr common.Address, _ipv4Addr string) (*types.Transaction, error) {
	return _MNReward.Contract.DoPing(&_MNReward.TransactOpts, _mnAddr, _ipv4Addr)
}

// ReceiveFee is a paid mutator transaction binding the contract method 0xe18b7fcf.
//
// Solidity: function receiveFee() returns()
func (_MNReward *MNRewardTransactor) ReceiveFee(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _MNReward.contract.Transact(opts, "receiveFee")
}

// ReceiveFee is a paid mutator transaction binding the contract method 0xe18b7fcf.
//
// Solidity: function receiveFee() returns()
func (_MNReward *MNRewardSession) ReceiveFee() (*types.Transaction, error) {
	return _MNReward.Contract.ReceiveFee(&_MNReward.TransactOpts)
}

// ReceiveFee is a paid mutator transaction binding the contract method 0xe18b7fcf.
//
// Solidity: function receiveFee() returns()
func (_MNReward *MNRewardTransactorSession) ReceiveFee() (*types.Transaction, error) {
	return _MNReward.Contract.ReceiveFee(&_MNReward.TransactOpts)
}

// MNRewardEvent_MNRewardIterator is returned from FilterEvent_MNReward and is used to iterate over the raw logs and unpacked data for Event_MNReward events raised by the MNReward contract.
type MNRewardEvent_MNRewardIterator struct {
	Event *MNRewardEvent_MNReward // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MNRewardEvent_MNRewardIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MNRewardEvent_MNReward)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MNRewardEvent_MNReward)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MNRewardEvent_MNRewardIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MNRewardEvent_MNRewardIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MNRewardEvent_MNReward represents a Event_MNReward event raised by the MNReward contract.
type MNRewardEvent_MNReward struct {
	Mn_instanceship_addr common.Address
	Node_id              uint32
	Event_type           uint8
	Raw                  types.Log // Blockchain specific contextual infos
}

// FilterEvent_MNReward is a free log retrieval operation binding the contract event 0xe82c65f4c00cc057ae0b661a2b50bc3c5c21061932774f87a5fdeab3de9526fc.
//
// Solidity: event Event_MNReward(_mn_instanceship_addr indexed address, _node_id uint32, _event_type uint8)
func (_MNReward *MNRewardFilterer) FilterEvent_MNReward(opts *bind.FilterOpts, _mn_instanceship_addr []common.Address) (*MNRewardEvent_MNRewardIterator, error) {

	var _mn_instanceship_addrRule []interface{}
	for _, _mn_instanceship_addrItem := range _mn_instanceship_addr {
		_mn_instanceship_addrRule = append(_mn_instanceship_addrRule, _mn_instanceship_addrItem)
	}

	logs, sub, err := _MNReward.contract.FilterLogs(opts, "Event_MNReward", _mn_instanceship_addrRule)
	if err != nil {
		return nil, err
	}
	return &MNRewardEvent_MNRewardIterator{contract: _MNReward.contract, event: "Event_MNReward", logs: logs, sub: sub}, nil
}

// WatchEvent_MNReward is a free log subscription operation binding the contract event 0xe82c65f4c00cc057ae0b661a2b50bc3c5c21061932774f87a5fdeab3de9526fc.
//
// Solidity: event Event_MNReward(_mn_instanceship_addr indexed address, _node_id uint32, _event_type uint8)
func (_MNReward *MNRewardFilterer) WatchEvent_MNReward(opts *bind.WatchOpts, sink chan<- *MNRewardEvent_MNReward, _mn_instanceship_addr []common.Address) (event.Subscription, error) {

	var _mn_instanceship_addrRule []interface{}
	for _, _mn_instanceship_addrItem := range _mn_instanceship_addr {
		_mn_instanceship_addrRule = append(_mn_instanceship_addrRule, _mn_instanceship_addrItem)
	}

	logs, sub, err := _MNReward.contract.WatchLogs(opts, "Event_MNReward", _mn_instanceship_addrRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MNRewardEvent_MNReward)
				if err := _MNReward.contract.UnpackLog(event, "Event_MNReward", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}
